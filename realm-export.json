{
  "realm": "OSSS",
  "enabled": true,
  "roles": {
    "realm": [
      {
        "id": "3e63a1a4-8bc1-44b4-96b3-78ad9d84282b",
        "name": "offline_access",
        "description": "Offline Access",
        "composite": false,
        "clientRole": false,
        "containerId": "OSSS",
        "attributes": {}
      },
      {
        "id": "1b05f7d2-d327-4f1a-b242-186106ec25c5",
        "name": "uma_authorization",
        "description": "UMA Authorization",
        "composite": false,
        "clientRole": false,
        "containerId": "OSSS",
        "attributes": {}
      },
      {
        "id": "c22d0c2e-4cb4-456f-a63c-883ca8c5e26d",
        "name": "default-roles-test",
        "description": "Default test role",
        "composite": true,
        "clientRole": false,
        "containerId": "OSSS",
        "attributes": {},
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "manage-account",
              "delete-account"
            ],
            "realm-management": [
              "query-groups",
              "manage-clients",
              "realm-admin",
              "manage-users",
              "query-realms",
              "view-events",
              "view-realm",
              "view-clients",
              "manage-events",
              "create-client",
              "manage-identity-providers",
              "manage-authorization",
              "query-users",
              "view-identity-providers",
              "impersonation",
              "query-clients",
              "view-authorization",
              "manage-realm",
              "view-users"
            ]
          }
        }
      }
    ],
    "client": {
      "account-console": [],
      "broker": [],
      "admin-cli": [],
      "security-admin-console": [],
      "osss-api": [
        {
          "id": "6e25d700-f6fc-46fe-9261-2af9002c67a9",
          "name": "api.user",
          "description": "Baseline access to OSSS API",
          "composite": false,
          "clientRole": true,
          "containerId": "osss-api",
          "attributes": {}
        },
        {
          "id": "94b4a658-89f9-469c-9475-7dfdc56de839",
          "name": "api.admin",
          "description": "Administrative access to OSSS API",
          "composite": false,
          "clientRole": true,
          "containerId": "osss-api",
          "attributes": {}
        },
        {
          "id": "f05a8d12-c007-4248-93f4-482e44945bc2",
          "name": "api.teacher",
          "description": "Teacher access to OSSS API",
          "composite": false,
          "clientRole": true,
          "containerId": "osss-api",
          "attributes": {
            "allowed_schools": [
              "Heritage Elementary",
              "Oak View MS"
            ],
            "grade_bands": [
              "6-8"
            ],
            "scopes": [
              "students:read",
              "attendance:read",
              "roster:read"
            ],
            "max_results": [
              "1000"
            ]
          }
        }
      ]
    }
  },
  "users": [
    {
      "id": "a50095b9-bd2c-4111-9943-8956fbd52709",
      "username": "admin@osss.local",
      "enabled": true,
      "email": "admin@osss.local",
      "emailVerified": true,
      "firstName": "OSSS",
      "lastName": "Admin",
      "requiredActions": [],
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [
        "offline_access",
        "uma_authorization",
        "admin"
      ],
      "clientRoles": {
        "realm-management": [
          "realm-admin"
        ],
        "account": [
          "manage-account",
          "view-profile"
        ],
        "osss-api": [
          "admin"
        ]
      },
      "groups": [],
      "attributes": {
        "department": [
          "IT"
        ],
        "title": [
          "Administrator"
        ]
      },
      "totp": true
    },
    {
      "id": "96324bca-6cb1-4219-bc5c-0a6712f87b4c",
      "username": "teacher@osss.local",
      "enabled": true,
      "email": "teacher@osss.local",
      "emailVerified": true,
      "firstName": "Pat",
      "lastName": "Teacher",
      "requiredActions": [],
      "credentials": [
        {
          "type": "password",
          "value": "password",
          "temporary": false
        }
      ],
      "realmRoles": [
        "uma_authorization"
      ],
      "clientRoles": {
        "account": [
          "view-profile"
        ],
        "osss-api": [
          "api.user",
          "api.teacher"
        ]
      },
      "groups": [],
      "attributes": {
        "role": [
          "teacher"
        ]
      },
      "totp": false
    }
  ],
  "clients": [
    {
      "clientId": "osss-api",
      "name": "osss-api",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "password",
      "publicClient": false,
      "bearerOnly": false,
      "frontchannelLogout": false,
      "standardFlowEnabled": true,
      "directAccessGrantsEnabled": true,
      "implicitFlowEnabled": false,
      "serviceAccountsEnabled": true,
      "consentRequired": false,
      "fullScopeAllowed": true,
      "redirectUris": [
        "http://localhost:8081/*"
      ],
      "webOrigins": [
        "http://localhost:8081"
      ],
      "notBefore": 0,
      "alwaysDisplayInConsole": false,
      "surrogateAuthRequired": false,
      "nodeReRegistrationTimeout": 0,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "authorizationServicesEnabled": true,
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "policyEnforcementMode": "ENFORCING",
        "resources": [
          {
            "name": "Default Resource",
            "type": "urn:osss-api:resources:default",
            "ownerManagedAccess": false,
            "attributes": {},
            "uris": [
              "/*"
            ]
          }
        ],
        "policies": [],
        "scopes": [],
        "decisionStrategy": "UNANIMOUS"
      }
    },
    {
      "clientId": "osss-web",
      "name": "osss-web",
      "rootUrl": "http://localhost:3000",
      "baseUrl": "/",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "password",
      "publicClient": false,
      "bearerOnly": false,
      "frontchannelLogout": false,
      "standardFlowEnabled": true,
      "directAccessGrantsEnabled": false,
      "implicitFlowEnabled": false,
      "serviceAccountsEnabled": false,
      "consentRequired": false,
      "fullScopeAllowed": true,
      "redirectUris": [
        "http://localhost:3000/*"
      ],
      "webOrigins": [
        "http://localhost:3000"
      ],
      "notBefore": 0,
      "alwaysDisplayInConsole": false,
      "surrogateAuthRequired": false,
      "nodeReRegistrationTimeout": 0,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "protocolMappers": [
        {
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "profile",
        "email",
        "roles",
        "osss-api-audience"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "authorizationServicesEnabled": true
    },
    {
      "clientId": "admin-cli",
      "name": "admin-cli",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "password",
      "publicClient": false,
      "bearerOnly": false,
      "frontchannelLogout": false,
      "standardFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "implicitFlowEnabled": false,
      "serviceAccountsEnabled": true,
      "consentRequired": false,
      "fullScopeAllowed": true,
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "alwaysDisplayInConsole": false,
      "surrogateAuthRequired": false,
      "nodeReRegistrationTimeout": 0,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "true",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "false",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "authorizationServicesEnabled": true,
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "policyEnforcementMode": "ENFORCING",
        "resources": [
          {
            "name": "Default Resource",
            "type": "urn:osss-api:resources:default",
            "ownerManagedAccess": false,
            "attributes": {},
            "uris": [
              "/*"
            ]
          }
        ],
        "policies": [],
        "scopes": [],
        "decisionStrategy": "UNANIMOUS"
      }
    }
  ],
  "groups": [],
  "scopeMappings": [],
  "clientScopes": [
    {
      "name": "web-origins",
      "protocol": "openid-connect",
      "attributes": {},
      "protocolMappers": []
    },
    {
      "name": "address",
      "protocol": "openid-connect",
      "attributes": {},
      "protocolMappers": []
    },
    {
      "name": "phone",
      "protocol": "openid-connect",
      "attributes": {},
      "protocolMappers": []
    },
    {
      "name": "microprofile-jwt",
      "protocol": "openid-connect",
      "attributes": {},
      "protocolMappers": []
    },
    {
      "name": "offline_access",
      "protocol": "openid-connect",
      "attributes": {},
      "protocolMappers": []
    },
    {
      "name": "roles",
      "description": "OIDC scope for realm & client roles",
      "protocol": "openid-connect",
      "attributes": {},
      "protocolMappers": [
        {
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String"
          }
        },
        {
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "name": "email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true"
      },
      "protocolMappers": [
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "name": "osss-api-audience",
      "description": "Adds aud=osss-api to access tokens",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true"
      },
      "protocolMappers": [
        {
          "name": "audience: osss-api",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "false",
            "included.client.audience": "osss-api"
          }
        }
      ]
    },
    {
      "name": "profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true"
      },
      "protocolMappers": [
        {
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "preferred username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "components": {},
  "authenticatorConfig": [],
  "requiredActions": [],
  "browserSecurityHeaders": {},
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "defaultRole": {
    "id": "2e6effaa-2979-4aba-8b50-fb99940ef1ba",
    "name": "default-roles-test",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "OSSS"
  },
  "defaultSignatureAlgorithm": "RS256",
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "keycloakVersion": "16.1.0",
  "userManagedAccessAllowed": false,
  "defaultDefaultClientScopes": [
    "roles",
    "web-origins",
    "profile",
    "email"
  ],
  "defaultOptionalClientScopes": [
    "address",
    "phone",
    "offline_access",
    "microprofile-jwt"
  ]
}