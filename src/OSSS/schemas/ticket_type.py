# Auto-generated by OSSS.schemas.codegen â€” DO NOT EDIT BY HAND
from __future__ import annotations
from typing import Any, Dict
from datetime import datetime
import uuid
from pydantic import Field
from OSSS.schemas.base import APIModel


class TicketTypeOut(APIModel):
    event_id: uuid.UUID
    name: str
    price_cents: int
    quantity_total: int
    quantity_sold: int
    sales_starts_at: datetime | None = None
    sales_ends_at: datetime | None = None
    attributes: Dict[str, Any] | None = None
    created_at: datetime
    updated_at: datetime
    id: uuid.UUID


class TicketTypeCreate(APIModel):
    event_id: uuid.UUID
    name: str = Field(..., max_length=128)
    # DB has server defaults of 0; allow omit on create, but validate when provided
    price_cents: int | None = Field(None, ge=0)
    quantity_total: int | None = Field(None, ge=0)
    quantity_sold: int | None = Field(None, ge=0)
    sales_starts_at: datetime | None = None
    sales_ends_at: datetime | None = None
    attributes: Dict[str, Any] | None = None


class TicketTypeReplace(APIModel):
    event_id: uuid.UUID
    name: str = Field(..., max_length=128)
    price_cents: int | None = Field(None, ge=0)
    quantity_total: int | None = Field(None, ge=0)
    quantity_sold: int | None = Field(None, ge=0)
    sales_starts_at: datetime | None = None
    sales_ends_at: datetime | None = None
    attributes: Dict[str, Any] | None = None


class TicketTypePatch(APIModel):
    event_id: uuid.UUID | None = None
    name: str | None = Field(None, max_length=128)
    price_cents: int | None = Field(None, ge=0)
    quantity_total: int | None = Field(None, ge=0)
    quantity_sold: int | None = Field(None, ge=0)
    sales_starts_at: datetime | None = None
    sales_ends_at: datetime | None = None
    attributes: Dict[str, Any] | None = None


class TicketTypeList(APIModel):
    items: list[TicketTypeOut]
    total: int | None = None
    skip: int = 0
    limit: int = 100
