# Auto-generated by OSSS.schemas.codegen â€” DO NOT EDIT BY HAND
from __future__ import annotations

from typing import Optional, List
from datetime import datetime
from pydantic import Field
from OSSS.schemas.base import APIModel


# -----------------------------
# Base (shared fields)
# -----------------------------
class MeetingPermissionBase(APIModel):
    meeting_id: str = Field(..., description="UUID of the meeting")
    user_id: str = Field(..., description="UUID of the user granted permissions")
    # Let these be optional on create so DB server_defaults can apply if omitted
    can_view: Optional[bool] = Field(None, description="Can view the meeting")
    can_edit: Optional[bool] = Field(None, description="Can edit the meeting")
    can_manage: Optional[bool] = Field(None, description="Can manage the meeting")


# -----------------------------
# Create (POST)
# -----------------------------
class MeetingPermissionCreate(MeetingPermissionBase):
    pass


# -----------------------------
# Replace (PUT)
# -----------------------------
class MeetingPermissionReplace(APIModel):
    meeting_id: str = Field(..., description="UUID of the meeting")
    user_id: str = Field(..., description="UUID of the user granted permissions")
    # For PUT/replace, require explicit booleans
    can_view: bool = Field(..., description="Can view the meeting")
    can_edit: bool = Field(..., description="Can edit the meeting")
    can_manage: bool = Field(..., description="Can manage the meeting")


# -----------------------------
# Patch (PATCH)
# -----------------------------
class MeetingPermissionPatch(APIModel):
    meeting_id: Optional[str] = None
    user_id: Optional[str] = None
    can_view: Optional[bool] = None
    can_edit: Optional[bool] = None
    can_manage: Optional[bool] = None


# -----------------------------
# Read (GET)
# -----------------------------
class MeetingPermissionOut(APIModel):
    id: str
    meeting_id: str
    user_id: str
    can_view: bool
    can_edit: bool
    can_manage: bool
    created_at: datetime
    updated_at: datetime


# -----------------------------
# Collections
# -----------------------------
class MeetingPermissionList(APIModel):
    items: List[MeetingPermissionOut]
    total: int | None = None
    skip: int = 0
    limit: int = 100
