cluster.name: "docker-cluster"
discovery.type: single-node

xpack.security.http.ssl.enabled: false

# REQUIRED for OIDC realms
xpack.security.authc.token.enabled: true

# elasticsearch.yml
xpack.security.enabled: true




xpack.security.authc.realms.oidc.oidc1:
  order: 1
  # RP (Elasticsearch/Kibana) settings
  rp.client_id: "kibana"                      # or your actual client id
  rp.response_type: code
  rp.redirect_uri: "http://localhost:5601/api/security/oidc/callback"
  #rp.post_logout_redirect_uri: "http://kibana:5601/logout"
  #rp.requested_scopes: ["openid","profile","email"]
  # OP (Keycloak) endpoints
  op.issuer: "https://keycloak.local:8443/realms/OSSS"
  op.authorization_endpoint: "https://keycloak.local:8443/realms/OSSS/protocol/openid-connect/auth"
  op.token_endpoint: "https://keycloak.local:8443/realms/OSSS/protocol/openid-connect/token"
  #op.userinfo_endpoint: "https://keycloak.local:8443/realms/OSSS/protocol/openid-connect/userinfo"
  op.jwkset_path: "https://keycloak.local:8443/realms/OSSS/protocol/openid-connect/certs"
  #op.endsession_endpoint: "https://keycloak.local:8443/realms/OSSS/protocol/openid-connect/logout"
  # Map the principal
  claims.principal: preferred_username

  # Trust our dev CA
  #op.ssl.certificate_authorities: [ "/usr/share/elasticsearch/config/keycloak-ca.crt" ]
  #op.ssl.verification_mode: full

  # âœ… TLS trust for contacting the OP (realm-level SSL block)
  ssl.certificate_authorities: [ "/usr/share/elasticsearch/config/keycloak-ca.crt" ]
  # optional (defaults to 'full'): none | certificate | full
  ssl.verification_mode: full
