ELASTICSEARCH_HOSTS="http://elasticsearch:9200"
ES_URL="http://elasticsearch:9200"
KIBANA_HOSTS="http://kibana:5601"
BEATS_SETUP_USERNAME="elastic"
BEATS_SETUP_PASSWORD="password"
ELASTIC_PASSWORD="password"
KIBANA_PASSWORD="password"
KIBANA_SETUP_API_KEY="password"
ELASTIC_VERSION="8.13.4"
KIBANA_USERNAME="elastic"
KIBANA_URL="http://kibana:5601"

# =============================================================================
# Core / Java
# =============================================================================
JAVA_OPTS="-Xms512m -Xmx1500m -Dquarkus.transaction-manager.default-transaction-timeout=1800s"

# =============================================================================
# Database: Postgres (bootstrap cluster)
# =============================================================================
POSTGRES_USER="postgres"
POSTGRES_PASSWORD="postgres"
POSTGRES_DB="postgres"
POSTGRES_INITDB_ARGS="--auth-host=scram-sha-256 --auth-local=scram-sha-256"

# =============================================================================
# Database: App DB (OSSS)
# =============================================================================
DATABASE_URL="postgresql+asyncpg://osss:password@localhost:5433/osss"
OSSS_DB_URL="postgresql+asyncpg://osss:password@localhost:5433/osss"
OSSS_DB_HOST="127.0.0.1"              # Or "osss_postgres" if running in Docker
OSSS_DB_PORT="5433"
OSSS_DB_NAME="osss"
OSSS_DB_USER="osss"
OSSS_DB_PASSWORD="password"
OSSS_API_URL="http://app:8000"

# Alembic (sync migrations)
ALEMBIC_DATABASE_URL="postgresql+asyncpg://osss:password@localhost:5433/osss"

# Async URL used by compose/services
ASYNC_DATABASE_URL="postgresql+asyncpg://osss:password@osss_postgres:5432/osss"

# =============================================================================
# Database: Keycloak DB
# =============================================================================
KC_DB=postgres
KC_DB_HOST=kc_postgres
KC_DB_PORT=5432
KC_DB_NAME=keycloak
KC_DB_USERNAME=keycloak
KC_DB_PASSWORD=password
KC_DB_SCHEMA="public"

# JDBC + properties (Keycloak)
KC_DB_URL="jdbc:postgresql://kc_postgres:5432/keycloak?tcpKeepAlive=true&connectTimeout=30&socketTimeout=0"
KC_DB_URL_PROPERTIES="tcpKeepAlive=true&connectTimeout=30&socketTimeout=0"

# (Also referenced by compose)
KC_DB_URL_HOST="kc_postgres"
KC_DB_URL_PORT="5432"

# =============================================================================
# Keycloak: Hostname / Network
# =============================================================================
KC_HOSTNAME="keycloak.local"
KC_HOSTNAME_URL="http://keycloak:8080"
KC_HOSTNAME_ADMIN_URL="http://keycloak:8080"
KC_HOSTNAME_STRICT="false"            # Allow fallback if mismatch with actual URL
KC_PROXY=edge
KC_HTTP_ENABLED=true

# Exposed / health endpoints
KC_URL="http://keycloak:8080"
KEYCLOAK_HEALTH_URL=http://keycloak:9000
KC_CERT_HOSTS="keycloak,localhost,127.0.0.1"

# Logging for Keycloak
KC_LOG_LEVEL="info,org.keycloak:DEBUG,org.hibernate:INFO,io.quarkus:DEBUG"

# =============================================================================
# Keycloak: Realm Import / Bootstrap
# =============================================================================
AUTH_DEBUG=1                             # Enable auth-related debug logging
REALM=OSSS                               # Keycloak realm name
IMPORT_STRATEGY=OVERWRITE_EXISTING       # Strategy when importing realm config
RESET_REALM=0                            # 1 to reset realm on boot
KC_SKIP_ADMIN_ROLE_CHECK=1               # Skip KC admin role check during import

# Admin credentials for KC console
KEYCLOAK_ADMIN=admin
KEYCLOAK_ADMIN_PASSWORD=admin

# =============================================================================
# OIDC / JWKS (internal + external separation)
# =============================================================================
# Internal (container-to-container; service DNS)
OIDC_ISSUER=http://keycloak.local:8080/realms/OSSS
OIDC_JWKS_URL=http://keycloak:8080/realms/OSSS/protocol/openid-connect/certs
OIDC_DISCOVERY_URL_INTERNAL=http://keycloak:8080/realms/OSSS/.well-known/openid-configuration
OIDC_TOKEN_URL_INTERNAL=http://keycloak:8080/realms/OSSS/protocol/openid-connect/token
OIDC_JWKS_URL_INTERNAL=http://keycloak:8080/realms/OSSS/protocol/openid-connect/certs

# External (browser/host-facing through published port)
OIDC_TOKEN_URL=http://keycloak.local:8080/realms/OSSS/protocol/openid-connect/token
OIDC_AUTH_URL=http://keycloak.local:8080/realms/OSSS/protocol/openid-connect/auth

# Verification / client settings for API
OIDC_CLIENT_ID="osss-api"                 # Client ID for validating aud
OIDC_VERIFY_AUD="0"                       # Disable audience verification (often needed with KC)
OIDC_VERIFY_ISS="1"
ALLOWED_CLOCK_SKEW="60"

# =============================================================================
# Keycloak: URLs consumed by app(s)
# =============================================================================
# External (host)
KEYCLOAK_SERVER_URL="http://keycloak.local:8080"
KEYCLOAK_PUBLIC_URL="http://keycloak.local:8080"
KEYCLOAK_BASE_URL="http://keycloak.local:8080"
KEYCLOAK_URL=http://keycloak.local:8080
KEYCLOAK_EXTERNAL_BASE="http://keycloak.local:8080"

# Internal (service-to-service)
KEYCLOAK_INTERNAL_BASE="http://keycloak:8080"   # (kept exactly as provided)
KEYCLOAK_ISSUER="http://keycloak.local:8080/realms/OSSS"
KEYCLOAK_JWKS_URL="http://keycloak.local:8080/realms/OSSS/protocol/openid-connect/certs"

# Realm / client info
KEYCLOAK_REALM=OSSS
KEYCLOAK_CLIENT_ID=osss-api
KEYCLOAK_CLIENT_SECRET=password
KEYCLOAK_ALLOWED_AUDIENCES=osss-api,osss-web
KEYCLOAK_AUDIENCE=osss-api

# =============================================================================
# Frontend (public / Next.js)
# =============================================================================
NEXT_PUBLIC_KEYCLOAK_BASE="http://localhost:8080"
NEXT_PUBLIC_KEYCLOAK_REALM=OSSS
NEXT_PUBLIC_KEYCLOAK_CLIENT_ID=osss-web
NEXT_PUBLIC_PUBLIC_URL="http://localhost:3000"
POST_LOGOUT_REDIRECT_URI="http://localhost:3000/"

# FastAPI OIDC redirect callback (external)
CALLBACK_URL="http://localhost:8081/callback"

# =============================================================================
# FastAPI App / API Docs
# =============================================================================
APP_BASE_URL=http://localhost:8081/
OPENAPI_URL=http://localhost:8081/openapi.json
SWAGGER_CLIENT_ID="osss-api"
SWAGGER_CLIENT_SECRET="password"

# =============================================================================
# Sessions / Redis
# =============================================================================
REDIS_URL="redis://localhost:6379"
REDIS_VERSION="-7-alpine"

SESSION_SECRET="a-very-long-random-string-change-this-once"
SESSION_MAX_AGE="1209600"             # 14 days
SESSION_TTL_SECONDS=3600              # Default session TTL
ACCESS_TOKEN_REFRESH_SKEW_SECONDS=3600
COOKIE_DOMAIN="localhost"
COOKIE_SECURE="false"
COOKIE_SAMESITE="lax"

# =============================================================================
# Auth / JWT (App)
# =============================================================================
JWT_SECRET="super-dev-secret"
JWT_ALLOWED_ALGS="RS256,HS256"
JWKS_CACHE_SECONDS=600
REQUIRE_AZP_MATCH=false               # If true, requires azp=client_id claim

# =============================================================================
# CORS
# =============================================================================
CORS_ALLOW_ORIGINS="http://localhost:3000,http://localhost:8081"
CORS_ORIGINS="http://localhost:3000,http://localhost:8081"

# =============================================================================
# Vault Integration
# =============================================================================
VAULT_OIDC_CLIENT_ID=vault
VAULT_OIDC_CLIENT_SECRET="password"    # Secret from Keycloak confidential client
VAULT_ADDR=http://localhost:8200
VAULT_REDIRECT_BASE=http://localhost:8200
VAULT_DEV_ROOT_TOKEN_ID=root
VAULT_KV_PATH=secret/env
VAULT_OIDC_ROLE=keycloak
VAULT_API_ADDR=http://localhost:8200

# Redirect URIs for Vault (CLI and UI)
VAULT_OIDC_CLI_REDIRECT=http://localhost:8250/oidc/callback
VAULT_OIDC_UI_REDIRECT=http://localhost:8200/ui/vault/auth/oidc/oidc/callback
VAULT_OIDC_REDIRECT="http://127.0.0.1:8200/ui/vault/auth/oidc/oidc/callback,https://127.0.0.1:8250/oidc/callback"

VAULT_OIDC_DISCOVERY_URL="http://keycloak.localhost:8080/realms/OSSS"
VAULT_UI_REDIRECT=http://localhost:8200/ui/vault/auth/oidc/oidc/callback
VAULT_CLI_REDIRECT=http://localhost:8250/oidc/callback

VAULT_TOKEN=root
VAULT_DEV_ROOT_TOKEN_ID="root"
VAULT_DEV_LISTEN_ADDRESS="0.0.0.0:8200"
VAULT_UI="true"

# =============================================================================
# Discovery / Derived
# =============================================================================
# Discovery URL the setup job should call (container->container)
OIDC_DISCOVERY_URL="${KEYCLOAK_INTERNAL_BASE}/realms/OSSS"
VAULT_OIDC_DISCOVERY_URL=http://keycloak.local:8080/realms/OSSS

# =============================================================================
# TLS / Certificates
# =============================================================================
ENABLE_LOCAL_TLS=0

# =============================================================================
# Logging / Debug (App + misc)
# =============================================================================
OSSS_LOG_LEVEL="DEBUG"
OSSS_DEBUG_MAPPINGS=1
REQUESTS_DEBUG=1
PM_GEN_LOG_LEVEL=DEBUG
PM_GEN_LOG_ROWS=1
PM_GEN_LOG_INDEX=1
PM_GEN_SQL_ECHO=1
DV_LOG_LEVEL=DEBUG
DV_SQL_ECHO=1
USERS_LOG_LEVEL="DEBUG"
USERS_LOG_SQL="1"
TEST_LOG=1

# =============================================================================
# Google Workspace (optional)
# =============================================================================
OSSS_GOOGLE_CLIENT_ID=...
OSSS_GOOGLE_CLIENT_SECRET=...
OSSS_GOOGLE_OAUTH_REDIRECT_URI="https://your-host/api/google/callback"
OSSS_GOOGLE_PROJECT_ID=...
OSSS_GOOGLE_SA_JSON_PATH="/secrets/your-sa.json"
OSSS_GOOGLE_WORKSPACE_IMPERSONATE="admin@district.org"
OSSS_PUBSUB_VERIFICATION_TOKEN="something-random"
GC_SCOPES="https://www.googleapis.com/auth/classroom.courses https://www.googleapis.com/auth/classroom.rosters"

# =============================================================================
# Misc / Integrations
# =============================================================================
CORS_ORIGINS=
HAS_ASYNCPG="True"
INTEGRATION_AUTH=1
CONSUL_HOST=127.0.0.1
CONSUL_PORT=8500
CONSUL_ENABLE=1
