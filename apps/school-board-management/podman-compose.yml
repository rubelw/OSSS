# podman-compose.yml
services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports: ["5432:5432"]
    volumes: ["pg_data:/var/lib/postgresql/data"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 20

  api:
    build: ./backend
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      API_SECRET: ${API_SECRET}
      CORS_ORIGINS: ${CORS_ORIGINS}
      KEYCLOAK_ISSUER: ${KEYCLOAK_ISSUER}
      KEYCLOAK_AUDIENCE: ${KEYCLOAK_AUDIENCE}
    depends_on:
      postgres:
        condition: service_healthy   # note: some podman-compose versions ignore this (see tip below)
    ports: ["8000:8000"]
    command: ["sh","-lc","alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000"]

  web:
    build: ./frontend
    environment:
      VITE_API_BASE: ${VITE_API_BASE}
      VITE_KEYCLOAK_URL: ${VITE_KEYCLOAK_URL}
      VITE_KEYCLOAK_REALM: ${VITE_KEYCLOAK_REALM}
      VITE_KEYCLOAK_CLIENT_ID: ${VITE_KEYCLOAK_CLIENT_ID}
    ports: ["5173:5173"]
    command: ["npm","run","dev","--","--host"]
    depends_on:
      - api

  keycloak:
    image: quay.io/keycloak/keycloak:25.0
    command: ["start-dev","--import-realm"]
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME_STRICT: "false"
      KC_HTTP_ENABLED: "true"
      KC_PROXY: "edge"
    ports: ["8081:8080"]
    volumes:
      - ./keycloak:/opt/keycloak/data/import

volumes:
  pg_data: {}
