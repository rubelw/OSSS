name: Publish Python distribution to PyPI

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      destination:
        description: "Publish to testpypi and pypi"
        type: choice
        options: [testpypi, pypi]
        default: testpypi
        required: true

permissions:
  contents: read

jobs:
  build:
    name: Build dist artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Upgrade pip & install build tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine

      - name: Build sdist & wheel
        run: python -m build

      - name: Validate metadata (twine check)
        run: twine check dist/*

      - name: Upload dist/ as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  publish-testpypi:
    name: Publish to TestPyPI
    needs: build
    if: github.ref == 'refs/heads/main'   # <-- instead of startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/osss   # optional; for “View deployment”
    steps:
      - name: Download dist artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          # skip-existing: true   # uncomment if you want to ignore already-uploaded files

  publish-pypi:
    name: Publish to PyPI
    needs: build
    if: github.ref == 'refs/heads/main'   # <-- instead of startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/osss  # optional; for “View deployment”
    steps:
      - name: Download dist artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          # skip-existing: true   # uncomment if you want to ignore already-uploaded files
