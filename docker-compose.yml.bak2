networks:
  osss-net:
    name: ${COMPOSE_PROJECT_NAME:-osss}_osss-net
    external: true

volumes:
  kc_postgres_data:

services:
  kc_postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: ${KC_DB_NAME:-keycloak}
      POSTGRES_USER: ${KC_DB_USERNAME:-keycloak}
      POSTGRES_PASSWORD: ${KC_DB_PASSWORD:-keycloakpass}
    networks: [ osss-net ]
    volumes:
      - kc_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${KC_DB_USERNAME:-keycloak} -d ${KC_DB_NAME:-keycloak} -h 127.0.0.1 -p 5432 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    restart: always

  # One-shot import that OVERWRITES realms from the mounted JSON files
  kc-importer:
    image: quay.io/keycloak/keycloak:25.0.6
    networks: [ osss-net ]
    depends_on:
      kc_postgres:
        condition: service_healthy
    environment:
      # --- DB (required for CLI import) ---
      KC_DB: postgres
      KC_DB_USERNAME: ${KC_DB_USERNAME:-keycloak}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD:-keycloakpass}
      KC_DB_URL_HOST: kc_postgres
      KC_DB_URL_PORT: "5432"
      KC_DB_URL_DATABASE: ${KC_DB_NAME:-keycloak}
      # (Admin env not required for CLI import)

      KC_LOG_LEVEL: "info,org.keycloak:DEBUG,org.hibernate:INFO,io.quarkus:DEBUG"

    volumes:
      - ./realm-export.json:/opt/keycloak/data/import/realm-export.json:ro
    command:
      - import
      - --dir=/opt/keycloak/data/import
      - --override=true
    restart: "no"

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.6
    depends_on:
      kc_importer_done:
        condition: service_completed_successfully
    networks: [ osss-net ]
    environment:
      # --- DB ---
      KC_DB: postgres
      KC_DB_USERNAME: ${KC_DB_USERNAME:-keycloak}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD:-keycloakpass}
      KC_DB_URL_HOST: kc_postgres
      KC_DB_URL_PORT: "5432"
      KC_DB_URL_DATABASE: ${KC_DB_NAME:-keycloak}

      # --- Admin ---
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}

      # --- Health + HTTP ---
      KC_HTTP_ENABLED: "true"
      KC_HEALTH_ENABLED: "true"

      # --- Hostname settings (adjust as needed) ---
      KC_PROXY: "edge"
      KC_HOSTNAME_PORT: "8080"
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"

      KC_FEATURES: "hostname:v1"

    command:
      - start-dev
      - --http-enabled=true
      - --hostname-admin-url=http://host.docker.internal:8085
      - --hostname-url=http://host.docker.internal:8085
    ports:
      - "8085:8080"
    restart: unless-stopped
    healthcheck:
      # Quarkus/Keycloak ready endpoint (requires KC_HEALTH_ENABLED=true)
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8080/health/ready || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 20s

# A tiny "dummy" service to create a dependency edge so keycloak waits for importer completion
# (Compose doesn't allow depends_on: service_completed_successfully on siblings directly
# without a service name; this idiom bridges that.)
  kc_importer_done:
    image: alpine:3.20
    depends_on:
      kc-importer:
        condition: service_completed_successfully
    command: ["true"]
    networks: [ osss-net ]
    restart: "no"
