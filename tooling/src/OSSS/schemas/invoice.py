from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass InvoiceBase(BaseModel):\n    student_id: Any = Field(...)\n    issued_on: date = Field(...)\n    due_on: Optional[date] = Field(None)\n    status: str = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass InvoiceCreate(BaseModel):\n    student_id: Any = Field(...)\n    issued_on: date = Field(...)\n    due_on: Optional[date] = Field(None)\n    status: str = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass InvoiceUpdate(BaseModel):\n    student_id: Optional[Any] = Field(...)\n    issued_on: Optional[date] = Field(...)\n    due_on: Optional[date] = Field(None)\n    status: Optional[str] = Field(...)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass InvoiceRead(BaseModel):\n    student_id: Any = Field(...)\n    issued_on: date = Field(...)\n    due_on: Optional[date] = Field(None)\n    status: str = Field(...)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n