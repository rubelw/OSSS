from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass PaycheckBase(BaseModel):\n    run_id: Any = Field(...)\n    employee_id: Any = Field(...)\n    check_no: Optional[str] = Field(None)\n    gross_pay: float = Field(...)\n    net_pay: float = Field(...)\n    taxes: Optional[Any] = Field(None)\n    attributes: Optional[Any] = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PaycheckCreate(BaseModel):\n    run_id: Any = Field(...)\n    employee_id: Any = Field(...)\n    check_no: Optional[str] = Field(None)\n    gross_pay: float = Field(...)\n    net_pay: float = Field(...)\n    taxes: Optional[Any] = Field(None)\n    attributes: Optional[Any] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PaycheckUpdate(BaseModel):\n    run_id: Optional[Any] = Field(...)\n    employee_id: Optional[Any] = Field(...)\n    check_no: Optional[str] = Field(None)\n    gross_pay: Optional[float] = Field(...)\n    net_pay: Optional[float] = Field(...)\n    taxes: Optional[Any] = Field(None)\n    attributes: Optional[Any] = Field(None)\n    id: Optional[Any] = Field(...)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PaycheckRead(BaseModel):\n    run_id: Any = Field(...)\n    employee_id: Any = Field(...)\n    check_no: Optional[str] = Field(None)\n    gross_pay: float = Field(...)\n    net_pay: float = Field(...)\n    taxes: Optional[Any] = Field(None)\n    attributes: Optional[Any] = Field(None)\n    id: Any = Field(...)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n