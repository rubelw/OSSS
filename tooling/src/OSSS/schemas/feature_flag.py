from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass FeatureFlagBase(BaseModel):\n    id: Any = Field(...)\n    org_id: Any = Field(...)\n    key: str = Field(...)\n    enabled: str = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass FeatureFlagCreate(BaseModel):\n    org_id: Any = Field(...)\n    key: str = Field(...)\n    enabled: str = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass FeatureFlagUpdate(BaseModel):\n    id: Optional[Any] = Field(...)\n    org_id: Optional[Any] = Field(...)\n    key: Optional[str] = Field(...)\n    enabled: Optional[str] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass FeatureFlagRead(BaseModel):\n    id: Any = Field(...)\n    org_id: Any = Field(...)\n    key: str = Field(...)\n    enabled: str = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n