from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass TripBase(BaseModel):\n    event_id: Any = Field(...)\n    provider: Optional[str] = Field(None)\n    bus_number: Optional[str] = Field(None)\n    driver_name: Optional[str] = Field(None)\n    depart_at: Optional[datetime] = Field(None)\n    return_at: Optional[datetime] = Field(None)\n    notes: Optional[str] = Field(None)\n    status: Optional[str] = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass TripCreate(BaseModel):\n    event_id: Any = Field(...)\n    provider: Optional[str] = Field(None)\n    bus_number: Optional[str] = Field(None)\n    driver_name: Optional[str] = Field(None)\n    depart_at: Optional[datetime] = Field(None)\n    return_at: Optional[datetime] = Field(None)\n    notes: Optional[str] = Field(None)\n    status: Optional[str] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass TripUpdate(BaseModel):\n    event_id: Optional[Any] = Field(...)\n    provider: Optional[str] = Field(None)\n    bus_number: Optional[str] = Field(None)\n    driver_name: Optional[str] = Field(None)\n    depart_at: Optional[datetime] = Field(None)\n    return_at: Optional[datetime] = Field(None)\n    notes: Optional[str] = Field(None)\n    status: Optional[str] = Field(None)\n    id: Optional[Any] = Field(...)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass TripRead(BaseModel):\n    event_id: Any = Field(...)\n    provider: Optional[str] = Field(None)\n    bus_number: Optional[str] = Field(None)\n    driver_name: Optional[str] = Field(None)\n    depart_at: Optional[datetime] = Field(None)\n    return_at: Optional[datetime] = Field(None)\n    notes: Optional[str] = Field(None)\n    status: Optional[str] = Field(None)\n    id: Any = Field(...)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n