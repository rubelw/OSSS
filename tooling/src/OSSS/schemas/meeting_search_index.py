from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass MeetingSearchIndexBase(BaseModel):\n    meeting_id: Any = Field(...)\n    ts: Optional[Any] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass MeetingSearchIndexCreate(BaseModel):\n    ts: Optional[Any] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass MeetingSearchIndexUpdate(BaseModel):\n    meeting_id: Optional[Any] = Field(...)\n    ts: Optional[Any] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass MeetingSearchIndexRead(BaseModel):\n    meeting_id: Any = Field(...)\n    ts: Optional[Any] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n