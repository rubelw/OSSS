from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass PersonBase(BaseModel):\n    first_name: str = Field(...)\n    last_name: str = Field(...)\n    middle_name: Optional[str] = Field(None)\n    dob: Optional[date] = Field(None)\n    email: Optional[str] = Field(None)\n    phone: Optional[str] = Field(None)\n    gender: Optional[str] = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PersonCreate(BaseModel):\n    first_name: str = Field(...)\n    last_name: str = Field(...)\n    middle_name: Optional[str] = Field(None)\n    dob: Optional[date] = Field(None)\n    email: Optional[str] = Field(None)\n    phone: Optional[str] = Field(None)\n    gender: Optional[str] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PersonUpdate(BaseModel):\n    first_name: Optional[str] = Field(...)\n    last_name: Optional[str] = Field(...)\n    middle_name: Optional[str] = Field(None)\n    dob: Optional[date] = Field(None)\n    email: Optional[str] = Field(None)\n    phone: Optional[str] = Field(None)\n    gender: Optional[str] = Field(None)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PersonRead(BaseModel):\n    first_name: str = Field(...)\n    last_name: str = Field(...)\n    middle_name: Optional[str] = Field(None)\n    dob: Optional[date] = Field(None)\n    email: Optional[str] = Field(None)\n    phone: Optional[str] = Field(None)\n    gender: Optional[str] = Field(None)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n