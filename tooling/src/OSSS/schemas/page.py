from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass PageBase(BaseModel):\n    slug: str = Field(...)\n    title: str = Field(...)\n    body: Optional[str] = Field(None)\n    status: str = Field(...)\n    published_at: Optional[datetime] = Field(None)\n    channel_id: Any = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PageCreate(BaseModel):\n    slug: str = Field(...)\n    title: str = Field(...)\n    body: Optional[str] = Field(None)\n    status: str = Field(...)\n    published_at: Optional[datetime] = Field(None)\n    channel_id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PageUpdate(BaseModel):\n    slug: Optional[str] = Field(...)\n    title: Optional[str] = Field(...)\n    body: Optional[str] = Field(None)\n    status: Optional[str] = Field(...)\n    published_at: Optional[datetime] = Field(None)\n    channel_id: Optional[Any] = Field(...)\n    id: Optional[Any] = Field(...)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PageRead(BaseModel):\n    slug: str = Field(...)\n    title: str = Field(...)\n    body: Optional[str] = Field(None)\n    status: str = Field(...)\n    published_at: Optional[datetime] = Field(None)\n    channel_id: Any = Field(...)\n    id: Any = Field(...)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n