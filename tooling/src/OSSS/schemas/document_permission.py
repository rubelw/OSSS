from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass DocumentPermissionBase(BaseModel):\n    id: Any = Field(...)\n    resource_type: str = Field(...)\n    resource_id: Any = Field(...)\n    principal_type: str = Field(...)\n    principal_id: Any = Field(...)\n    permission: str = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass DocumentPermissionCreate(BaseModel):\n    resource_type: str = Field(...)\n    resource_id: Any = Field(...)\n    principal_type: str = Field(...)\n    principal_id: Any = Field(...)\n    permission: str = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass DocumentPermissionUpdate(BaseModel):\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    id: Optional[Any] = Field(...)\n    resource_type: Optional[str] = Field(...)\n    resource_id: Optional[Any] = Field(...)\n    principal_type: Optional[str] = Field(...)\n    principal_id: Optional[Any] = Field(...)\n    permission: Optional[str] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass DocumentPermissionRead(BaseModel):\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    id: Any = Field(...)\n    resource_type: str = Field(...)\n    resource_id: Any = Field(...)\n    principal_type: str = Field(...)\n    principal_id: Any = Field(...)\n    permission: str = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n