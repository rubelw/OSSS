from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass AttendanceBase(BaseModel):\n    id: Any = Field(...)\n    meeting_id: Any = Field(...)\n    user_id: Any = Field(...)\n    status: Optional[str] = Field(None)\n    arrived_at: Optional[datetime] = Field(None)\n    left_at: Optional[datetime] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass AttendanceCreate(BaseModel):\n    meeting_id: Any = Field(...)\n    user_id: Any = Field(...)\n    status: Optional[str] = Field(None)\n    arrived_at: Optional[datetime] = Field(None)\n    left_at: Optional[datetime] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass AttendanceUpdate(BaseModel):\n    id: Optional[Any] = Field(...)\n    meeting_id: Optional[Any] = Field(...)\n    user_id: Optional[Any] = Field(...)\n    status: Optional[str] = Field(None)\n    arrived_at: Optional[datetime] = Field(None)\n    left_at: Optional[datetime] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass AttendanceRead(BaseModel):\n    id: Any = Field(...)\n    meeting_id: Any = Field(...)\n    user_id: Any = Field(...)\n    status: Optional[str] = Field(None)\n    arrived_at: Optional[datetime] = Field(None)\n    left_at: Optional[datetime] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n