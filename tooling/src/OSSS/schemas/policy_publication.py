from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass PolicyPublicationBase(BaseModel):\n    policy_version_id: Any = Field(...)\n    published_at: datetime = Field(...)\n    public_url: Optional[str] = Field(None)\n    is_current: bool = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PolicyPublicationCreate(BaseModel):\n    published_at: datetime = Field(...)\n    public_url: Optional[str] = Field(None)\n    is_current: bool = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PolicyPublicationUpdate(BaseModel):\n    policy_version_id: Optional[Any] = Field(...)\n    published_at: Optional[datetime] = Field(...)\n    public_url: Optional[str] = Field(None)\n    is_current: Optional[bool] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PolicyPublicationRead(BaseModel):\n    policy_version_id: Any = Field(...)\n    published_at: datetime = Field(...)\n    public_url: Optional[str] = Field(None)\n    is_current: bool = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n