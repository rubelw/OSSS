from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass WorkOrderTimeLogBase(BaseModel):\n    work_order_id: Any = Field(...)\n    user_id: Optional[Any] = Field(None)\n    started_at: Optional[datetime] = Field(None)\n    ended_at: Optional[datetime] = Field(None)\n    hours: Optional[float] = Field(None)\n    hourly_rate: Optional[float] = Field(None)\n    cost: Optional[float] = Field(None)\n    notes: Optional[str] = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass WorkOrderTimeLogCreate(BaseModel):\n    work_order_id: Any = Field(...)\n    user_id: Optional[Any] = Field(None)\n    started_at: Optional[datetime] = Field(None)\n    ended_at: Optional[datetime] = Field(None)\n    hours: Optional[float] = Field(None)\n    hourly_rate: Optional[float] = Field(None)\n    cost: Optional[float] = Field(None)\n    notes: Optional[str] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass WorkOrderTimeLogUpdate(BaseModel):\n    work_order_id: Optional[Any] = Field(...)\n    user_id: Optional[Any] = Field(None)\n    started_at: Optional[datetime] = Field(None)\n    ended_at: Optional[datetime] = Field(None)\n    hours: Optional[float] = Field(None)\n    hourly_rate: Optional[float] = Field(None)\n    cost: Optional[float] = Field(None)\n    notes: Optional[str] = Field(None)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass WorkOrderTimeLogRead(BaseModel):\n    work_order_id: Any = Field(...)\n    user_id: Optional[Any] = Field(None)\n    started_at: Optional[datetime] = Field(None)\n    ended_at: Optional[datetime] = Field(None)\n    hours: Optional[float] = Field(None)\n    hourly_rate: Optional[float] = Field(None)\n    cost: Optional[float] = Field(None)\n    notes: Optional[str] = Field(None)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n