from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass FanPageBase(BaseModel):\n    school_id: Any = Field(...)\n    slug: str = Field(...)\n    title: Optional[str] = Field(None)\n    content_md: Optional[str] = Field(None)\n    published: bool = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass FanPageCreate(BaseModel):\n    school_id: Any = Field(...)\n    slug: str = Field(...)\n    title: Optional[str] = Field(None)\n    content_md: Optional[str] = Field(None)\n    published: bool = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass FanPageUpdate(BaseModel):\n    school_id: Optional[Any] = Field(...)\n    slug: Optional[str] = Field(...)\n    title: Optional[str] = Field(None)\n    content_md: Optional[str] = Field(None)\n    published: Optional[bool] = Field(...)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass FanPageRead(BaseModel):\n    school_id: Any = Field(...)\n    slug: str = Field(...)\n    title: Optional[str] = Field(None)\n    content_md: Optional[str] = Field(None)\n    published: bool = Field(...)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n