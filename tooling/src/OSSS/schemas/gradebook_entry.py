from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass GradebookEntryBase(BaseModel):\n    assignment_id: Any = Field(...)\n    student_id: Any = Field(...)\n    score: Optional[float] = Field(None)\n    submitted_at: Optional[datetime] = Field(None)\n    late: str = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass GradebookEntryCreate(BaseModel):\n    assignment_id: Any = Field(...)\n    student_id: Any = Field(...)\n    score: Optional[float] = Field(None)\n    submitted_at: Optional[datetime] = Field(None)\n    late: str = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass GradebookEntryUpdate(BaseModel):\n    assignment_id: Optional[Any] = Field(...)\n    student_id: Optional[Any] = Field(...)\n    score: Optional[float] = Field(None)\n    submitted_at: Optional[datetime] = Field(None)\n    late: Optional[str] = Field(...)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass GradebookEntryRead(BaseModel):\n    assignment_id: Any = Field(...)\n    student_id: Any = Field(...)\n    score: Optional[float] = Field(None)\n    submitted_at: Optional[datetime] = Field(None)\n    late: str = Field(...)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n