from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass ReviewRoundBase(BaseModel):\n    round_no: int = Field(...)\n    opened_at: Optional[datetime] = Field(None)\n    closed_at: Optional[datetime] = Field(None)\n    status: Optional[str] = Field(...)\n    proposal_id: Any = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ReviewRoundCreate(BaseModel):\n    round_no: int = Field(...)\n    opened_at: Optional[datetime] = Field(None)\n    closed_at: Optional[datetime] = Field(None)\n    status: Optional[str] = Field(...)\n    proposal_id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ReviewRoundUpdate(BaseModel):\n    round_no: Optional[int] = Field(...)\n    opened_at: Optional[datetime] = Field(None)\n    closed_at: Optional[datetime] = Field(None)\n    status: Optional[str] = Field(...)\n    proposal_id: Optional[Any] = Field(...)\n    id: Optional[Any] = Field(...)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ReviewRoundRead(BaseModel):\n    round_no: int = Field(...)\n    opened_at: Optional[datetime] = Field(None)\n    closed_at: Optional[datetime] = Field(None)\n    status: Optional[str] = Field(...)\n    proposal_id: Any = Field(...)\n    id: Any = Field(...)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n