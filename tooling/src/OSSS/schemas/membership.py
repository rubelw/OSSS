from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass MembershipBase(BaseModel):\n    committee_id: Any = Field(...)\n    person_id: Any = Field(...)\n    role: Optional[str] = Field(None)\n    start_date: Optional[date] = Field(None)\n    end_date: Optional[date] = Field(None)\n    voting_member: bool = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass MembershipCreate(BaseModel):\n    committee_id: Any = Field(...)\n    person_id: Any = Field(...)\n    role: Optional[str] = Field(None)\n    start_date: Optional[date] = Field(None)\n    end_date: Optional[date] = Field(None)\n    voting_member: bool = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass MembershipUpdate(BaseModel):\n    committee_id: Optional[Any] = Field(...)\n    person_id: Optional[Any] = Field(...)\n    role: Optional[str] = Field(None)\n    start_date: Optional[date] = Field(None)\n    end_date: Optional[date] = Field(None)\n    voting_member: Optional[bool] = Field(...)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass MembershipRead(BaseModel):\n    committee_id: Any = Field(...)\n    person_id: Any = Field(...)\n    role: Optional[str] = Field(None)\n    start_date: Optional[date] = Field(None)\n    end_date: Optional[date] = Field(None)\n    voting_member: bool = Field(...)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n