from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass EvaluationFileBase(BaseModel):\n    id: Any = Field(...)\n    assignment_id: Any = Field(...)\n    file_id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass EvaluationFileCreate(BaseModel):\n    assignment_id: Any = Field(...)\n    file_id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass EvaluationFileUpdate(BaseModel):\n    id: Optional[Any] = Field(...)\n    assignment_id: Optional[Any] = Field(...)\n    file_id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass EvaluationFileRead(BaseModel):\n    id: Any = Field(...)\n    assignment_id: Any = Field(...)\n    file_id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n