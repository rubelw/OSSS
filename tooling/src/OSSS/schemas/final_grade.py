from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass FinalGradeBase(BaseModel):\n    student_id: Any = Field(...)\n    section_id: Any = Field(...)\n    grading_period_id: Any = Field(...)\n    numeric_grade: Optional[float] = Field(None)\n    letter_grade: Optional[str] = Field(None)\n    credits_earned: Optional[float] = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass FinalGradeCreate(BaseModel):\n    student_id: Any = Field(...)\n    section_id: Any = Field(...)\n    grading_period_id: Any = Field(...)\n    numeric_grade: Optional[float] = Field(None)\n    letter_grade: Optional[str] = Field(None)\n    credits_earned: Optional[float] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass FinalGradeUpdate(BaseModel):\n    student_id: Optional[Any] = Field(...)\n    section_id: Optional[Any] = Field(...)\n    grading_period_id: Optional[Any] = Field(...)\n    numeric_grade: Optional[float] = Field(None)\n    letter_grade: Optional[str] = Field(None)\n    credits_earned: Optional[float] = Field(None)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass FinalGradeRead(BaseModel):\n    student_id: Any = Field(...)\n    section_id: Any = Field(...)\n    grading_period_id: Any = Field(...)\n    numeric_grade: Optional[float] = Field(None)\n    letter_grade: Optional[str] = Field(None)\n    credits_earned: Optional[float] = Field(None)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n