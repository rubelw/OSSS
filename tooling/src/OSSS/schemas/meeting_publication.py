from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass MeetingPublicationBase(BaseModel):\n    meeting_id: Any = Field(...)\n    published_at: datetime = Field(...)\n    public_url: Optional[str] = Field(None)\n    archive_url: Optional[str] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass MeetingPublicationCreate(BaseModel):\n    published_at: datetime = Field(...)\n    public_url: Optional[str] = Field(None)\n    archive_url: Optional[str] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass MeetingPublicationUpdate(BaseModel):\n    meeting_id: Optional[Any] = Field(...)\n    published_at: Optional[datetime] = Field(...)\n    public_url: Optional[str] = Field(None)\n    archive_url: Optional[str] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass MeetingPublicationRead(BaseModel):\n    meeting_id: Any = Field(...)\n    published_at: datetime = Field(...)\n    public_url: Optional[str] = Field(None)\n    archive_url: Optional[str] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n