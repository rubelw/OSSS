from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass PlanAssignmentBase(BaseModel):\n    id: Any = Field(...)\n    entity_type: str = Field(...)\n    entity_id: Any = Field(...)\n    assignee_type: str = Field(...)\n    assignee_id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PlanAssignmentCreate(BaseModel):\n    entity_type: str = Field(...)\n    entity_id: Any = Field(...)\n    assignee_type: str = Field(...)\n    assignee_id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PlanAssignmentUpdate(BaseModel):\n    id: Optional[Any] = Field(...)\n    entity_type: Optional[str] = Field(...)\n    entity_id: Optional[Any] = Field(...)\n    assignee_type: Optional[str] = Field(...)\n    assignee_id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PlanAssignmentRead(BaseModel):\n    id: Any = Field(...)\n    entity_type: str = Field(...)\n    entity_id: Any = Field(...)\n    assignee_type: str = Field(...)\n    assignee_id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n