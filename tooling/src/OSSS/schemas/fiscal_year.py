from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass FiscalYearBase(BaseModel):\n    year: int = Field(...)\n    start_date: date = Field(...)\n    end_date: date = Field(...)\n    is_closed: bool = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass FiscalYearCreate(BaseModel):\n    year: int = Field(...)\n    start_date: date = Field(...)\n    end_date: date = Field(...)\n    is_closed: bool = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass FiscalYearUpdate(BaseModel):\n    year: Optional[int] = Field(...)\n    start_date: Optional[date] = Field(...)\n    end_date: Optional[date] = Field(...)\n    is_closed: Optional[bool] = Field(...)\n    id: Optional[Any] = Field(...)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass FiscalYearRead(BaseModel):\n    year: int = Field(...)\n    start_date: date = Field(...)\n    end_date: date = Field(...)\n    is_closed: bool = Field(...)\n    id: Any = Field(...)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n