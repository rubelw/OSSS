from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass DonationBase(BaseModel):\n    campaign_id: Any = Field(...)\n    donor_name: Optional[str] = Field(None)\n    donor_email: Optional[str] = Field(None)\n    amount_cents: int = Field(...)\n    method: Optional[str] = Field(None)\n    donated_at: datetime = Field(None)\n    receipt_code: Optional[str] = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass DonationCreate(BaseModel):\n    campaign_id: Any = Field(...)\n    donor_name: Optional[str] = Field(None)\n    donor_email: Optional[str] = Field(None)\n    amount_cents: int = Field(...)\n    method: Optional[str] = Field(None)\n    donated_at: datetime = Field(None)\n    receipt_code: Optional[str] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass DonationUpdate(BaseModel):\n    campaign_id: Optional[Any] = Field(...)\n    donor_name: Optional[str] = Field(None)\n    donor_email: Optional[str] = Field(None)\n    amount_cents: Optional[int] = Field(...)\n    method: Optional[str] = Field(None)\n    donated_at: Optional[datetime] = Field(None)\n    receipt_code: Optional[str] = Field(None)\n    id: Optional[Any] = Field(...)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass DonationRead(BaseModel):\n    campaign_id: Any = Field(...)\n    donor_name: Optional[str] = Field(None)\n    donor_email: Optional[str] = Field(None)\n    amount_cents: int = Field(...)\n    method: Optional[str] = Field(None)\n    donated_at: datetime = Field(None)\n    receipt_code: Optional[str] = Field(None)\n    id: Any = Field(...)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n