from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass DocumentNotificationBase(BaseModel):\n    id: Any = Field(...)\n    document_id: Any = Field(...)\n    user_id: Any = Field(...)\n    subscribed: bool = Field(...)\n    last_sent_at: Optional[datetime] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass DocumentNotificationCreate(BaseModel):\n    document_id: Any = Field(...)\n    user_id: Any = Field(...)\n    subscribed: bool = Field(...)\n    last_sent_at: Optional[datetime] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass DocumentNotificationUpdate(BaseModel):\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    id: Optional[Any] = Field(...)\n    document_id: Optional[Any] = Field(...)\n    user_id: Optional[Any] = Field(...)\n    subscribed: Optional[bool] = Field(...)\n    last_sent_at: Optional[datetime] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass DocumentNotificationRead(BaseModel):\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    id: Any = Field(...)\n    document_id: Any = Field(...)\n    user_id: Any = Field(...)\n    subscribed: bool = Field(...)\n    last_sent_at: Optional[datetime] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n