from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass PMPlanBase(BaseModel):\n    asset_id: Optional[Any] = Field(None)\n    building_id: Optional[Any] = Field(None)\n    name: str = Field(...)\n    frequency: Optional[str] = Field(None)\n    next_due_at: Optional[datetime] = Field(None)\n    last_completed_at: Optional[datetime] = Field(None)\n    active: bool = Field(...)\n    procedure: Optional[Any] = Field(None)\n    attributes: Optional[Any] = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PMPlanCreate(BaseModel):\n    asset_id: Optional[Any] = Field(None)\n    building_id: Optional[Any] = Field(None)\n    name: str = Field(...)\n    frequency: Optional[str] = Field(None)\n    next_due_at: Optional[datetime] = Field(None)\n    last_completed_at: Optional[datetime] = Field(None)\n    active: bool = Field(...)\n    procedure: Optional[Any] = Field(None)\n    attributes: Optional[Any] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PMPlanUpdate(BaseModel):\n    asset_id: Optional[Any] = Field(None)\n    building_id: Optional[Any] = Field(None)\n    name: Optional[str] = Field(...)\n    frequency: Optional[str] = Field(None)\n    next_due_at: Optional[datetime] = Field(None)\n    last_completed_at: Optional[datetime] = Field(None)\n    active: Optional[bool] = Field(...)\n    procedure: Optional[Any] = Field(None)\n    attributes: Optional[Any] = Field(None)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PMPlanRead(BaseModel):\n    asset_id: Optional[Any] = Field(None)\n    building_id: Optional[Any] = Field(None)\n    name: str = Field(...)\n    frequency: Optional[str] = Field(None)\n    next_due_at: Optional[datetime] = Field(None)\n    last_completed_at: Optional[datetime] = Field(None)\n    active: bool = Field(...)\n    procedure: Optional[Any] = Field(None)\n    attributes: Optional[Any] = Field(None)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n