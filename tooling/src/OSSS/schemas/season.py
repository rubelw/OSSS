from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass SeasonBase(BaseModel):\n    name: str = Field(...)\n    start_year: int = Field(...)\n    end_year: int = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass SeasonCreate(BaseModel):\n    name: str = Field(...)\n    start_year: int = Field(...)\n    end_year: int = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass SeasonUpdate(BaseModel):\n    name: Optional[str] = Field(...)\n    start_year: Optional[int] = Field(...)\n    end_year: Optional[int] = Field(...)\n    id: Optional[Any] = Field(...)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass SeasonRead(BaseModel):\n    name: str = Field(...)\n    start_year: int = Field(...)\n    end_year: int = Field(...)\n    id: Any = Field(...)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n