from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass ContactBase(BaseModel):\n    type: str = Field(...)\n    value: str = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ContactCreate(BaseModel):\n    type: str = Field(...)\n    value: str = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ContactUpdate(BaseModel):\n    type: Optional[str] = Field(...)\n    value: Optional[str] = Field(...)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ContactRead(BaseModel):\n    type: str = Field(...)\n    value: str = Field(...)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n