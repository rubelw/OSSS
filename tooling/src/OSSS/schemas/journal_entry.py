from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass JournalEntryBase(BaseModel):\n    fiscal_period_id: Any = Field(...)\n    je_no: str = Field(...)\n    journal_date: date = Field(...)\n    description: Optional[str] = Field(None)\n    status: str = Field(...)\n    total_debits: float = Field(...)\n    total_credits: float = Field(...)\n    batch_id: Any = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass JournalEntryCreate(BaseModel):\n    fiscal_period_id: Any = Field(...)\n    je_no: str = Field(...)\n    journal_date: date = Field(...)\n    description: Optional[str] = Field(None)\n    status: str = Field(...)\n    total_debits: float = Field(...)\n    total_credits: float = Field(...)\n    batch_id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass JournalEntryUpdate(BaseModel):\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    fiscal_period_id: Optional[Any] = Field(...)\n    je_no: Optional[str] = Field(...)\n    journal_date: Optional[date] = Field(...)\n    description: Optional[str] = Field(None)\n    status: Optional[str] = Field(...)\n    total_debits: Optional[float] = Field(...)\n    total_credits: Optional[float] = Field(...)\n    batch_id: Optional[Any] = Field(...)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass JournalEntryRead(BaseModel):\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    fiscal_period_id: Any = Field(...)\n    je_no: str = Field(...)\n    journal_date: date = Field(...)\n    description: Optional[str] = Field(None)\n    status: str = Field(...)\n    total_debits: float = Field(...)\n    total_credits: float = Field(...)\n    batch_id: Any = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n