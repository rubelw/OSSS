from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass ConcessionSaleItemBase(BaseModel):\n    sale_id: Any = Field(...)\n    item_id: Any = Field(...)\n    quantity: int = Field(...)\n    price_cents: int = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ConcessionSaleItemCreate(BaseModel):\n    sale_id: Any = Field(...)\n    item_id: Any = Field(...)\n    quantity: int = Field(...)\n    price_cents: int = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ConcessionSaleItemUpdate(BaseModel):\n    sale_id: Optional[Any] = Field(...)\n    item_id: Optional[Any] = Field(...)\n    quantity: Optional[int] = Field(...)\n    price_cents: Optional[int] = Field(...)\n    id: Optional[Any] = Field(...)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ConcessionSaleItemRead(BaseModel):\n    sale_id: Any = Field(...)\n    item_id: Any = Field(...)\n    quantity: int = Field(...)\n    price_cents: int = Field(...)\n    id: Any = Field(...)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n