from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass PayrollRunBase(BaseModel):\n    pay_period_id: Any = Field(...)\n    run_no: int = Field(...)\n    status: str = Field(...)\n    created_by_user_id: Optional[Any] = Field(None)\n    posted_entry_id: Optional[Any] = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PayrollRunCreate(BaseModel):\n    pay_period_id: Any = Field(...)\n    run_no: int = Field(...)\n    status: str = Field(...)\n    created_by_user_id: Optional[Any] = Field(None)\n    posted_entry_id: Optional[Any] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PayrollRunUpdate(BaseModel):\n    pay_period_id: Optional[Any] = Field(...)\n    run_no: Optional[int] = Field(...)\n    status: Optional[str] = Field(...)\n    created_by_user_id: Optional[Any] = Field(None)\n    posted_entry_id: Optional[Any] = Field(None)\n    id: Optional[Any] = Field(...)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PayrollRunRead(BaseModel):\n    pay_period_id: Any = Field(...)\n    run_no: int = Field(...)\n    status: str = Field(...)\n    created_by_user_id: Optional[Any] = Field(None)\n    posted_entry_id: Optional[Any] = Field(None)\n    id: Any = Field(...)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n