from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass StateBase(BaseModel):\n    code: str = Field(...)\n    name: str = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass StateCreate(BaseModel):\n    name: str = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass StateUpdate(BaseModel):\n    code: Optional[str] = Field(...)\n    name: Optional[str] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass StateRead(BaseModel):\n    code: str = Field(...)\n    name: str = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n