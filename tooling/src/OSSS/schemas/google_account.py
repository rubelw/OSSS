from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass GoogleAccountBase(BaseModel):\n    user_id: Any = Field(...)\n    access_token: str = Field(...)\n    refresh_token: Optional[str] = Field(None)\n    token_uri: str = Field(None)\n    client_id: str = Field(...)\n    client_secret: str = Field(...)\n    expiry: Optional[datetime] = Field(None)\n    scopes: Optional[Any] = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass GoogleAccountCreate(BaseModel):\n    user_id: Any = Field(...)\n    access_token: str = Field(...)\n    refresh_token: Optional[str] = Field(None)\n    token_uri: str = Field(None)\n    client_id: str = Field(...)\n    client_secret: str = Field(...)\n    expiry: Optional[datetime] = Field(None)\n    scopes: Optional[Any] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass GoogleAccountUpdate(BaseModel):\n    user_id: Optional[Any] = Field(...)\n    access_token: Optional[str] = Field(...)\n    refresh_token: Optional[str] = Field(None)\n    token_uri: Optional[str] = Field(None)\n    client_id: Optional[str] = Field(...)\n    client_secret: Optional[str] = Field(...)\n    expiry: Optional[datetime] = Field(None)\n    scopes: Optional[Any] = Field(None)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass GoogleAccountRead(BaseModel):\n    user_id: Any = Field(...)\n    access_token: str = Field(...)\n    refresh_token: Optional[str] = Field(None)\n    token_uri: str = Field(None)\n    client_id: str = Field(...)\n    client_secret: str = Field(...)\n    expiry: Optional[datetime] = Field(None)\n    scopes: Optional[Any] = Field(None)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n