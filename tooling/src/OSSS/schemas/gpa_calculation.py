from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass GpaCalculationBase(BaseModel):\n    student_id: Any = Field(...)\n    term_id: Any = Field(...)\n    gpa: float = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass GpaCalculationCreate(BaseModel):\n    student_id: Any = Field(...)\n    term_id: Any = Field(...)\n    gpa: float = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass GpaCalculationUpdate(BaseModel):\n    student_id: Optional[Any] = Field(...)\n    term_id: Optional[Any] = Field(...)\n    gpa: Optional[float] = Field(...)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass GpaCalculationRead(BaseModel):\n    student_id: Any = Field(...)\n    term_id: Any = Field(...)\n    gpa: float = Field(...)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n