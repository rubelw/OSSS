from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass IncidentParticipantBase(BaseModel):\n    incident_id: Any = Field(...)\n    person_id: Any = Field(...)\n    role: str = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass IncidentParticipantCreate(BaseModel):\n    incident_id: Any = Field(...)\n    person_id: Any = Field(...)\n    role: str = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass IncidentParticipantUpdate(BaseModel):\n    incident_id: Optional[Any] = Field(...)\n    person_id: Optional[Any] = Field(...)\n    role: Optional[str] = Field(...)\n    id: Optional[Any] = Field(...)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass IncidentParticipantRead(BaseModel):\n    incident_id: Any = Field(...)\n    person_id: Any = Field(...)\n    role: str = Field(...)\n    id: Any = Field(...)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n