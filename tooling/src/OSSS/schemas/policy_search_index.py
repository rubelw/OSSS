from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass PolicySearchIndexBase(BaseModel):\n    policy_id: Any = Field(...)\n    ts: Optional[Any] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PolicySearchIndexCreate(BaseModel):\n    ts: Optional[Any] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PolicySearchIndexUpdate(BaseModel):\n    policy_id: Optional[Any] = Field(...)\n    ts: Optional[Any] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PolicySearchIndexRead(BaseModel):\n    policy_id: Any = Field(...)\n    ts: Optional[Any] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n