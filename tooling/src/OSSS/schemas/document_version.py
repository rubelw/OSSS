from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass DocumentVersionBase(BaseModel):\n    document_id: Any = Field(...)\n    version_no: int = Field(...)\n    file_id: Any = Field(...)\n    checksum: Optional[str] = Field(None)\n    created_by: Optional[Any] = Field(None)\n    published_at: Optional[datetime] = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass DocumentVersionCreate(BaseModel):\n    document_id: Any = Field(...)\n    version_no: int = Field(...)\n    file_id: Any = Field(...)\n    checksum: Optional[str] = Field(None)\n    created_by: Optional[Any] = Field(None)\n    published_at: Optional[datetime] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass DocumentVersionUpdate(BaseModel):\n    document_id: Optional[Any] = Field(...)\n    version_no: Optional[int] = Field(...)\n    file_id: Optional[Any] = Field(...)\n    checksum: Optional[str] = Field(None)\n    created_by: Optional[Any] = Field(None)\n    created_at: Optional[datetime] = Field(...)\n    published_at: Optional[datetime] = Field(None)\n    id: Optional[Any] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass DocumentVersionRead(BaseModel):\n    document_id: Any = Field(...)\n    version_no: int = Field(...)\n    file_id: Any = Field(...)\n    checksum: Optional[str] = Field(None)\n    created_by: Optional[Any] = Field(None)\n    created_at: datetime = Field(...)\n    published_at: Optional[datetime] = Field(None)\n    id: Any = Field(...)\n    updated_at: datetime = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n