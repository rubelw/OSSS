from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass OrderLineItemBase(BaseModel):\n    order_id: Any = Field(...)\n    ticket_type_id: Any = Field(...)\n    quantity: int = Field(...)\n    unit_price_cents: int = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass OrderLineItemCreate(BaseModel):\n    order_id: Any = Field(...)\n    ticket_type_id: Any = Field(...)\n    quantity: int = Field(...)\n    unit_price_cents: int = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass OrderLineItemUpdate(BaseModel):\n    order_id: Optional[Any] = Field(...)\n    ticket_type_id: Optional[Any] = Field(...)\n    quantity: Optional[int] = Field(...)\n    unit_price_cents: Optional[int] = Field(...)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass OrderLineItemRead(BaseModel):\n    order_id: Any = Field(...)\n    ticket_type_id: Any = Field(...)\n    quantity: int = Field(...)\n    unit_price_cents: int = Field(...)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n