from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass WorkOrderBase(BaseModel):\n    school_id: Optional[Any] = Field(None)\n    building_id: Optional[Any] = Field(None)\n    space_id: Optional[Any] = Field(None)\n    asset_id: Optional[Any] = Field(None)\n    request_id: Optional[Any] = Field(None)\n    status: str = Field(...)\n    priority: Optional[str] = Field(None)\n    category: Optional[str] = Field(None)\n    summary: str = Field(...)\n    description: Optional[str] = Field(None)\n    requested_due_at: Optional[datetime] = Field(None)\n    scheduled_start_at: Optional[datetime] = Field(None)\n    scheduled_end_at: Optional[datetime] = Field(None)\n    completed_at: Optional[datetime] = Field(None)\n    assigned_to_user_id: Optional[Any] = Field(None)\n    materials_cost: Optional[float] = Field(None)\n    labor_cost: Optional[float] = Field(None)\n    other_cost: Optional[float] = Field(None)\n    attributes: Optional[Any] = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass WorkOrderCreate(BaseModel):\n    school_id: Optional[Any] = Field(None)\n    building_id: Optional[Any] = Field(None)\n    space_id: Optional[Any] = Field(None)\n    asset_id: Optional[Any] = Field(None)\n    request_id: Optional[Any] = Field(None)\n    status: str = Field(...)\n    priority: Optional[str] = Field(None)\n    category: Optional[str] = Field(None)\n    summary: str = Field(...)\n    description: Optional[str] = Field(None)\n    requested_due_at: Optional[datetime] = Field(None)\n    scheduled_start_at: Optional[datetime] = Field(None)\n    scheduled_end_at: Optional[datetime] = Field(None)\n    completed_at: Optional[datetime] = Field(None)\n    assigned_to_user_id: Optional[Any] = Field(None)\n    materials_cost: Optional[float] = Field(None)\n    labor_cost: Optional[float] = Field(None)\n    other_cost: Optional[float] = Field(None)\n    attributes: Optional[Any] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass WorkOrderUpdate(BaseModel):\n    school_id: Optional[Any] = Field(None)\n    building_id: Optional[Any] = Field(None)\n    space_id: Optional[Any] = Field(None)\n    asset_id: Optional[Any] = Field(None)\n    request_id: Optional[Any] = Field(None)\n    status: Optional[str] = Field(...)\n    priority: Optional[str] = Field(None)\n    category: Optional[str] = Field(None)\n    summary: Optional[str] = Field(...)\n    description: Optional[str] = Field(None)\n    requested_due_at: Optional[datetime] = Field(None)\n    scheduled_start_at: Optional[datetime] = Field(None)\n    scheduled_end_at: Optional[datetime] = Field(None)\n    completed_at: Optional[datetime] = Field(None)\n    assigned_to_user_id: Optional[Any] = Field(None)\n    materials_cost: Optional[float] = Field(None)\n    labor_cost: Optional[float] = Field(None)\n    other_cost: Optional[float] = Field(None)\n    attributes: Optional[Any] = Field(None)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass WorkOrderRead(BaseModel):\n    school_id: Optional[Any] = Field(None)\n    building_id: Optional[Any] = Field(None)\n    space_id: Optional[Any] = Field(None)\n    asset_id: Optional[Any] = Field(None)\n    request_id: Optional[Any] = Field(None)\n    status: str = Field(...)\n    priority: Optional[str] = Field(None)\n    category: Optional[str] = Field(None)\n    summary: str = Field(...)\n    description: Optional[str] = Field(None)\n    requested_due_at: Optional[datetime] = Field(None)\n    scheduled_start_at: Optional[datetime] = Field(None)\n    scheduled_end_at: Optional[datetime] = Field(None)\n    completed_at: Optional[datetime] = Field(None)\n    assigned_to_user_id: Optional[Any] = Field(None)\n    materials_cost: Optional[float] = Field(None)\n    labor_cost: Optional[float] = Field(None)\n    other_cost: Optional[float] = Field(None)\n    attributes: Optional[Any] = Field(None)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n