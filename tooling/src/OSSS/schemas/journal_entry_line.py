from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass JournalEntryLineBase(BaseModel):\n    entry_id: Any = Field(...)\n    account_id: Any = Field(...)\n    line_no: int = Field(...)\n    description: Optional[str] = Field(None)\n    debit: float = Field(...)\n    credit: float = Field(...)\n    segment_overrides: Optional[Any] = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass JournalEntryLineCreate(BaseModel):\n    entry_id: Any = Field(...)\n    account_id: Any = Field(...)\n    line_no: int = Field(...)\n    description: Optional[str] = Field(None)\n    debit: float = Field(...)\n    credit: float = Field(...)\n    segment_overrides: Optional[Any] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass JournalEntryLineUpdate(BaseModel):\n    entry_id: Optional[Any] = Field(...)\n    account_id: Optional[Any] = Field(...)\n    line_no: Optional[int] = Field(...)\n    description: Optional[str] = Field(None)\n    debit: Optional[float] = Field(...)\n    credit: Optional[float] = Field(...)\n    segment_overrides: Optional[Any] = Field(None)\n    id: Optional[Any] = Field(...)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass JournalEntryLineRead(BaseModel):\n    entry_id: Any = Field(...)\n    account_id: Any = Field(...)\n    line_no: int = Field(...)\n    description: Optional[str] = Field(None)\n    debit: float = Field(...)\n    credit: float = Field(...)\n    segment_overrides: Optional[Any] = Field(None)\n    id: Any = Field(...)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n