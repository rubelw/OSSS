from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass DocumentBase(BaseModel):\n    folder_id: Optional[Any] = Field(None)\n    title: str = Field(...)\n    current_version_id: Optional[Any] = Field(None)\n    is_public: bool = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass DocumentCreate(BaseModel):\n    folder_id: Optional[Any] = Field(None)\n    title: str = Field(...)\n    current_version_id: Optional[Any] = Field(None)\n    is_public: bool = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass DocumentUpdate(BaseModel):\n    folder_id: Optional[Any] = Field(None)\n    title: Optional[str] = Field(...)\n    current_version_id: Optional[Any] = Field(None)\n    is_public: Optional[bool] = Field(...)\n    id: Optional[Any] = Field(...)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass DocumentRead(BaseModel):\n    folder_id: Optional[Any] = Field(None)\n    title: str = Field(...)\n    current_version_id: Optional[Any] = Field(None)\n    is_public: bool = Field(...)\n    id: Any = Field(...)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n