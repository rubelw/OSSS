from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass BusStopTimeBase(BaseModel):\n    route_id: Any = Field(...)\n    stop_id: Any = Field(...)\n    arrival_time: Any = Field(...)\n    departure_time: Optional[Any] = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass BusStopTimeCreate(BaseModel):\n    route_id: Any = Field(...)\n    stop_id: Any = Field(...)\n    arrival_time: Any = Field(...)\n    departure_time: Optional[Any] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass BusStopTimeUpdate(BaseModel):\n    route_id: Optional[Any] = Field(...)\n    stop_id: Optional[Any] = Field(...)\n    arrival_time: Optional[Any] = Field(...)\n    departure_time: Optional[Any] = Field(None)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass BusStopTimeRead(BaseModel):\n    route_id: Any = Field(...)\n    stop_id: Any = Field(...)\n    arrival_time: Any = Field(...)\n    departure_time: Optional[Any] = Field(None)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n