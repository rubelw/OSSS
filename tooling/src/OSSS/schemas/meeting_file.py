from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass MeetingFileBase(BaseModel):\n    id: Any = Field(...)\n    meeting_id: Any = Field(...)\n    file_id: Any = Field(...)\n    caption: Optional[str] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass MeetingFileCreate(BaseModel):\n    meeting_id: Any = Field(...)\n    file_id: Any = Field(...)\n    caption: Optional[str] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass MeetingFileUpdate(BaseModel):\n    id: Optional[Any] = Field(...)\n    meeting_id: Optional[Any] = Field(...)\n    file_id: Optional[Any] = Field(...)\n    caption: Optional[str] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass MeetingFileRead(BaseModel):\n    id: Any = Field(...)\n    meeting_id: Any = Field(...)\n    file_id: Any = Field(...)\n    caption: Optional[str] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n