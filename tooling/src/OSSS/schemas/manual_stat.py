from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass ManualStatBase(BaseModel):\n    game_id: Any = Field(...)\n    team_id: Any = Field(...)\n    athlete_id: Optional[str] = Field(None)\n    payload: Any = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ManualStatCreate(BaseModel):\n    game_id: Any = Field(...)\n    team_id: Any = Field(...)\n    athlete_id: Optional[str] = Field(None)\n    payload: Any = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ManualStatUpdate(BaseModel):\n    game_id: Optional[Any] = Field(...)\n    team_id: Optional[Any] = Field(...)\n    athlete_id: Optional[str] = Field(None)\n    payload: Optional[Any] = Field(None)\n    created_at: Optional[datetime] = Field(None)\n    id: Optional[Any] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ManualStatRead(BaseModel):\n    game_id: Any = Field(...)\n    team_id: Any = Field(...)\n    athlete_id: Optional[str] = Field(None)\n    payload: Any = Field(None)\n    created_at: datetime = Field(None)\n    id: Any = Field(...)\n    updated_at: datetime = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n