from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass ConcessionItemBase(BaseModel):\n    stand_id: Any = Field(...)\n    name: Optional[str] = Field(None)\n    price_cents: int = Field(...)\n    inventory: Optional[int] = Field(None)\n    active: bool = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ConcessionItemCreate(BaseModel):\n    stand_id: Any = Field(...)\n    name: Optional[str] = Field(None)\n    price_cents: int = Field(...)\n    inventory: Optional[int] = Field(None)\n    active: bool = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ConcessionItemUpdate(BaseModel):\n    stand_id: Optional[Any] = Field(...)\n    name: Optional[str] = Field(None)\n    price_cents: Optional[int] = Field(...)\n    inventory: Optional[int] = Field(None)\n    active: Optional[bool] = Field(...)\n    id: Optional[Any] = Field(...)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ConcessionItemRead(BaseModel):\n    stand_id: Any = Field(...)\n    name: Optional[str] = Field(None)\n    price_cents: int = Field(...)\n    inventory: Optional[int] = Field(None)\n    active: bool = Field(...)\n    id: Any = Field(...)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n