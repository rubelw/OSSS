from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass MeetingPermissionBase(BaseModel):\n    meeting_id: Any = Field(...)\n    user_id: Any = Field(...)\n    can_view: bool = Field(...)\n    can_edit: str = Field(...)\n    can_manage: str = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass MeetingPermissionCreate(BaseModel):\n    meeting_id: Any = Field(...)\n    user_id: Any = Field(...)\n    can_view: bool = Field(...)\n    can_edit: str = Field(...)\n    can_manage: str = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass MeetingPermissionUpdate(BaseModel):\n    meeting_id: Optional[Any] = Field(...)\n    user_id: Optional[Any] = Field(...)\n    can_view: Optional[bool] = Field(...)\n    can_edit: Optional[str] = Field(...)\n    can_manage: Optional[str] = Field(...)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass MeetingPermissionRead(BaseModel):\n    meeting_id: Any = Field(...)\n    user_id: Any = Field(...)\n    can_view: bool = Field(...)\n    can_edit: str = Field(...)\n    can_manage: str = Field(...)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n