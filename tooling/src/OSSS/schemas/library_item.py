from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass LibraryItemBase(BaseModel):\n    school_id: Any = Field(...)\n    title: str = Field(...)\n    author: Optional[str] = Field(None)\n    isbn: Optional[str] = Field(None)\n    barcode: Optional[str] = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass LibraryItemCreate(BaseModel):\n    school_id: Any = Field(...)\n    title: str = Field(...)\n    author: Optional[str] = Field(None)\n    isbn: Optional[str] = Field(None)\n    barcode: Optional[str] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass LibraryItemUpdate(BaseModel):\n    school_id: Optional[Any] = Field(...)\n    title: Optional[str] = Field(...)\n    author: Optional[str] = Field(None)\n    isbn: Optional[str] = Field(None)\n    barcode: Optional[str] = Field(None)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass LibraryItemRead(BaseModel):\n    school_id: Any = Field(...)\n    title: str = Field(...)\n    author: Optional[str] = Field(None)\n    isbn: Optional[str] = Field(None)\n    barcode: Optional[str] = Field(None)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n