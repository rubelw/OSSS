from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass WaiverBase(BaseModel):\n    student_id: Any = Field(...)\n    reason: Optional[str] = Field(None)\n    amount: Optional[float] = Field(None)\n    granted_on: Optional[date] = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass WaiverCreate(BaseModel):\n    student_id: Any = Field(...)\n    reason: Optional[str] = Field(None)\n    amount: Optional[float] = Field(None)\n    granted_on: Optional[date] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass WaiverUpdate(BaseModel):\n    student_id: Optional[Any] = Field(...)\n    reason: Optional[str] = Field(None)\n    amount: Optional[float] = Field(None)\n    granted_on: Optional[date] = Field(None)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass WaiverRead(BaseModel):\n    student_id: Any = Field(...)\n    reason: Optional[str] = Field(None)\n    amount: Optional[float] = Field(None)\n    granted_on: Optional[date] = Field(None)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n