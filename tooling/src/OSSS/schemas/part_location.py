from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass PartLocationBase(BaseModel):\n    part_id: Any = Field(...)\n    building_id: Optional[Any] = Field(None)\n    space_id: Optional[Any] = Field(None)\n    location_code: Optional[str] = Field(None)\n    qty_on_hand: float = Field(...)\n    min_qty: Optional[float] = Field(None)\n    max_qty: Optional[float] = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PartLocationCreate(BaseModel):\n    part_id: Any = Field(...)\n    building_id: Optional[Any] = Field(None)\n    space_id: Optional[Any] = Field(None)\n    location_code: Optional[str] = Field(None)\n    qty_on_hand: float = Field(...)\n    min_qty: Optional[float] = Field(None)\n    max_qty: Optional[float] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PartLocationUpdate(BaseModel):\n    part_id: Optional[Any] = Field(...)\n    building_id: Optional[Any] = Field(None)\n    space_id: Optional[Any] = Field(None)\n    location_code: Optional[str] = Field(None)\n    qty_on_hand: Optional[float] = Field(...)\n    min_qty: Optional[float] = Field(None)\n    max_qty: Optional[float] = Field(None)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass PartLocationRead(BaseModel):\n    part_id: Any = Field(...)\n    building_id: Optional[Any] = Field(None)\n    space_id: Optional[Any] = Field(None)\n    location_code: Optional[str] = Field(None)\n    qty_on_hand: float = Field(...)\n    min_qty: Optional[float] = Field(None)\n    max_qty: Optional[float] = Field(None)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n