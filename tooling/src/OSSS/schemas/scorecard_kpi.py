from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass ScorecardKPIBase(BaseModel):\n    id: Any = Field(...)\n    scorecard_id: Any = Field(...)\n    kpi_id: Any = Field(...)\n    display_order: Optional[int] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ScorecardKPICreate(BaseModel):\n    scorecard_id: Any = Field(...)\n    kpi_id: Any = Field(...)\n    display_order: Optional[int] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ScorecardKPIUpdate(BaseModel):\n    id: Optional[Any] = Field(...)\n    scorecard_id: Optional[Any] = Field(...)\n    kpi_id: Optional[Any] = Field(...)\n    display_order: Optional[int] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ScorecardKPIRead(BaseModel):\n    id: Any = Field(...)\n    scorecard_id: Any = Field(...)\n    kpi_id: Any = Field(...)\n    display_order: Optional[int] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n