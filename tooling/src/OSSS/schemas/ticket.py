<<<<<<< HEAD
from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass TicketBase(BaseModel):\n    order_id: Any = Field(...)\n    ticket_type_id: Any = Field(...)\n    event_id: Optional[Any] = Field(None)\n    qr_code: Optional[str] = Field(None)\n    status: str = Field(None)\n    issued_at: Optional[datetime] = Field(None)\n    redeemed_at: Optional[datetime] = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass TicketCreate(BaseModel):\n    order_id: Any = Field(...)\n    ticket_type_id: Any = Field(...)\n    event_id: Optional[Any] = Field(None)\n    qr_code: Optional[str] = Field(None)\n    status: str = Field(None)\n    issued_at: Optional[datetime] = Field(None)\n    redeemed_at: Optional[datetime] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass TicketUpdate(BaseModel):\n    order_id: Optional[Any] = Field(...)\n    ticket_type_id: Optional[Any] = Field(...)\n    event_id: Optional[Any] = Field(None)\n    qr_code: Optional[str] = Field(None)\n    status: Optional[str] = Field(None)\n    issued_at: Optional[datetime] = Field(None)\n    redeemed_at: Optional[datetime] = Field(None)\n    id: Optional[Any] = Field(...)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass TicketRead(BaseModel):\n    order_id: Any = Field(...)\n    ticket_type_id: Any = Field(...)\n    event_id: Optional[Any] = Field(None)\n    qr_code: Optional[str] = Field(None)\n    status: str = Field(None)\n    issued_at: Optional[datetime] = Field(None)\n    redeemed_at: Optional[datetime] = Field(None)\n    id: Any = Field(...)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n
=======
from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass TicketBase(BaseModel):\n    ticket_type_id: Any = Field(...)\n    serial_no: int = Field(...)\n    price_cents: int = Field(...)\n    holder_person_id: Optional[Any] = Field(None)\n    qr_code: Optional[str] = Field(None)\n    status: str = Field(...)\n    issued_at: datetime = Field(...)\n    checked_in_at: Optional[datetime] = Field(None)\n    order_id: Any = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass TicketCreate(BaseModel):\n    ticket_type_id: Any = Field(...)\n    serial_no: int = Field(...)\n    price_cents: int = Field(...)\n    holder_person_id: Optional[Any] = Field(None)\n    qr_code: Optional[str] = Field(None)\n    status: str = Field(...)\n    issued_at: datetime = Field(...)\n    checked_in_at: Optional[datetime] = Field(None)\n    order_id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass TicketUpdate(BaseModel):\n    ticket_type_id: Optional[Any] = Field(...)\n    serial_no: Optional[int] = Field(...)\n    price_cents: Optional[int] = Field(...)\n    holder_person_id: Optional[Any] = Field(None)\n    qr_code: Optional[str] = Field(None)\n    status: Optional[str] = Field(...)\n    issued_at: Optional[datetime] = Field(...)\n    checked_in_at: Optional[datetime] = Field(None)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    order_id: Optional[Any] = Field(...)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass TicketRead(BaseModel):\n    ticket_type_id: Any = Field(...)\n    serial_no: int = Field(...)\n    price_cents: int = Field(...)\n    holder_person_id: Optional[Any] = Field(None)\n    qr_code: Optional[str] = Field(None)\n    status: str = Field(...)\n    issued_at: datetime = Field(...)\n    checked_in_at: Optional[datetime] = Field(None)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    order_id: Any = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n
>>>>>>> main
