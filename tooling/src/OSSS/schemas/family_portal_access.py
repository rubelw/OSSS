from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass FamilyPortalAccessBase(BaseModel):\n    id: Any = Field(...)\n    guardian_id: Any = Field(...)\n    student_id: Any = Field(...)\n    permissions: Optional[str] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass FamilyPortalAccessCreate(BaseModel):\n    guardian_id: Any = Field(...)\n    student_id: Any = Field(...)\n    permissions: Optional[str] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass FamilyPortalAccessUpdate(BaseModel):\n    id: Optional[Any] = Field(...)\n    guardian_id: Optional[Any] = Field(...)\n    student_id: Optional[Any] = Field(...)\n    permissions: Optional[str] = Field(None)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass FamilyPortalAccessRead(BaseModel):\n    id: Any = Field(...)\n    guardian_id: Any = Field(...)\n    student_id: Any = Field(...)\n    permissions: Optional[str] = Field(None)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n