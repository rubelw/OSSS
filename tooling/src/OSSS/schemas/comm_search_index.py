from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass CommSearchIndexBase(BaseModel):\n    id: Any = Field(...)\n    entity_type: str = Field(...)\n    entity_id: Any = Field(...)\n    ts: Optional[Any] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass CommSearchIndexCreate(BaseModel):\n    entity_type: str = Field(...)\n    entity_id: Any = Field(...)\n    ts: Optional[Any] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass CommSearchIndexUpdate(BaseModel):\n    id: Optional[Any] = Field(...)\n    entity_type: Optional[str] = Field(...)\n    entity_id: Optional[Any] = Field(...)\n    ts: Optional[Any] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass CommSearchIndexRead(BaseModel):\n    id: Any = Field(...)\n    entity_type: str = Field(...)\n    entity_id: Any = Field(...)\n    ts: Optional[Any] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n