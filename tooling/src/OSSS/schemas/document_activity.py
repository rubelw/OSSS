from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass DocumentActivityBase(BaseModel):\n    document_id: Any = Field(...)\n    actor_id: Optional[Any] = Field(None)\n    action: str = Field(...)\n    at: datetime = Field(...)\n    meta: Optional[Any] = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass DocumentActivityCreate(BaseModel):\n    document_id: Any = Field(...)\n    actor_id: Optional[Any] = Field(None)\n    action: str = Field(...)\n    at: datetime = Field(...)\n    meta: Optional[Any] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass DocumentActivityUpdate(BaseModel):\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    document_id: Optional[Any] = Field(...)\n    actor_id: Optional[Any] = Field(None)\n    action: Optional[str] = Field(...)\n    at: Optional[datetime] = Field(...)\n    meta: Optional[Any] = Field(None)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass DocumentActivityRead(BaseModel):\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    document_id: Any = Field(...)\n    actor_id: Optional[Any] = Field(None)\n    action: str = Field(...)\n    at: datetime = Field(...)\n    meta: Optional[Any] = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n