from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass AgendaItemFileBase(BaseModel):\n    id: Any = Field(...)\n    agenda_item_id: Any = Field(...)\n    file_id: Any = Field(...)\n    caption: Optional[str] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass AgendaItemFileCreate(BaseModel):\n    agenda_item_id: Any = Field(...)\n    file_id: Any = Field(...)\n    caption: Optional[str] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass AgendaItemFileUpdate(BaseModel):\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    id: Optional[Any] = Field(...)\n    agenda_item_id: Optional[Any] = Field(...)\n    file_id: Optional[Any] = Field(...)\n    caption: Optional[str] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass AgendaItemFileRead(BaseModel):\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    id: Any = Field(...)\n    agenda_item_id: Any = Field(...)\n    file_id: Any = Field(...)\n    caption: Optional[str] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n