from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass TicketTypeBase(BaseModel):\n    name: str = Field(...)\n    price_cents: int = Field(...)\n    quantity_total: int = Field(...)\n    quantity_sold: int = Field(...)\n    sales_starts_at: Optional[datetime] = Field(None)\n    sales_ends_at: Optional[datetime] = Field(None)\n    attributes: Optional[Any] = Field(None)\n    event_id: Any = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass TicketTypeCreate(BaseModel):\n    name: str = Field(...)\n    price_cents: int = Field(...)\n    quantity_total: int = Field(...)\n    quantity_sold: int = Field(...)\n    sales_starts_at: Optional[datetime] = Field(None)\n    sales_ends_at: Optional[datetime] = Field(None)\n    attributes: Optional[Any] = Field(None)\n    event_id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass TicketTypeUpdate(BaseModel):\n    name: Optional[str] = Field(...)\n    price_cents: Optional[int] = Field(...)\n    quantity_total: Optional[int] = Field(...)\n    quantity_sold: Optional[int] = Field(...)\n    sales_starts_at: Optional[datetime] = Field(None)\n    sales_ends_at: Optional[datetime] = Field(None)\n    attributes: Optional[Any] = Field(None)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    event_id: Optional[Any] = Field(...)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass TicketTypeRead(BaseModel):\n    name: str = Field(...)\n    price_cents: int = Field(...)\n    quantity_total: int = Field(...)\n    quantity_sold: int = Field(...)\n    sales_starts_at: Optional[datetime] = Field(None)\n    sales_ends_at: Optional[datetime] = Field(None)\n    attributes: Optional[Any] = Field(None)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    event_id: Any = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n