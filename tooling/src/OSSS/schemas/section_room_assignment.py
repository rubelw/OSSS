from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass SectionRoomAssignmentBase(BaseModel):\n    section_id: Any = Field(...)\n    room_id: Any = Field(...)\n    start_date: Optional[date] = Field(None)\n    end_date: Optional[date] = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass SectionRoomAssignmentCreate(BaseModel):\n    section_id: Any = Field(...)\n    room_id: Any = Field(...)\n    start_date: Optional[date] = Field(None)\n    end_date: Optional[date] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass SectionRoomAssignmentUpdate(BaseModel):\n    section_id: Optional[Any] = Field(...)\n    room_id: Optional[Any] = Field(...)\n    start_date: Optional[date] = Field(None)\n    end_date: Optional[date] = Field(None)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass SectionRoomAssignmentRead(BaseModel):\n    section_id: Any = Field(...)\n    room_id: Any = Field(...)\n    start_date: Optional[date] = Field(None)\n    end_date: Optional[date] = Field(None)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n