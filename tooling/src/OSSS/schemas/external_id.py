from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass ExternalIdBase(BaseModel):\n    entity_type: str = Field(...)\n    entity_id: Any = Field(...)\n    system: str = Field(...)\n    external_id: str = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ExternalIdCreate(BaseModel):\n    entity_type: str = Field(...)\n    entity_id: Any = Field(...)\n    system: str = Field(...)\n    external_id: str = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ExternalIdUpdate(BaseModel):\n    entity_type: Optional[str] = Field(...)\n    entity_id: Optional[Any] = Field(...)\n    system: Optional[str] = Field(...)\n    external_id: Optional[str] = Field(...)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ExternalIdRead(BaseModel):\n    entity_type: str = Field(...)\n    entity_id: Any = Field(...)\n    system: str = Field(...)\n    external_id: str = Field(...)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n