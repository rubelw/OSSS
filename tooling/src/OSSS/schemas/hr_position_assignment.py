from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass HRPositionAssignmentBase(BaseModel):\n    employee_id: Any = Field(...)\n    position_id: Any = Field(...)\n    start_date: date = Field(...)\n    end_date: Optional[date] = Field(None)\n    percent: Optional[float] = Field(None)\n    funding_split: Optional[Any] = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass HRPositionAssignmentCreate(BaseModel):\n    employee_id: Any = Field(...)\n    position_id: Any = Field(...)\n    start_date: date = Field(...)\n    end_date: Optional[date] = Field(None)\n    percent: Optional[float] = Field(None)\n    funding_split: Optional[Any] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass HRPositionAssignmentUpdate(BaseModel):\n    employee_id: Optional[Any] = Field(...)\n    position_id: Optional[Any] = Field(...)\n    start_date: Optional[date] = Field(...)\n    end_date: Optional[date] = Field(None)\n    percent: Optional[float] = Field(None)\n    funding_split: Optional[Any] = Field(None)\n    id: Optional[Any] = Field(...)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass HRPositionAssignmentRead(BaseModel):\n    employee_id: Any = Field(...)\n    position_id: Any = Field(...)\n    start_date: date = Field(...)\n    end_date: Optional[date] = Field(None)\n    percent: Optional[float] = Field(None)\n    funding_split: Optional[Any] = Field(None)\n    id: Any = Field(...)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n