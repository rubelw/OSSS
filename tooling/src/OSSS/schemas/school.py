from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass SchoolBase(BaseModel):\n    organization_id: Any = Field(...)\n    name: str = Field(...)\n    school_code: Optional[str] = Field(None)\n    nces_school_id: Optional[str] = Field(None)\n    building_code: Optional[str] = Field(None)\n    type: Optional[str] = Field(None)\n    timezone: Optional[str] = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass SchoolCreate(BaseModel):\n    organization_id: Any = Field(...)\n    name: str = Field(...)\n    school_code: Optional[str] = Field(None)\n    nces_school_id: Optional[str] = Field(None)\n    building_code: Optional[str] = Field(None)\n    type: Optional[str] = Field(None)\n    timezone: Optional[str] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass SchoolUpdate(BaseModel):\n    organization_id: Optional[Any] = Field(...)\n    name: Optional[str] = Field(...)\n    school_code: Optional[str] = Field(None)\n    nces_school_id: Optional[str] = Field(None)\n    building_code: Optional[str] = Field(None)\n    type: Optional[str] = Field(None)\n    timezone: Optional[str] = Field(None)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass SchoolRead(BaseModel):\n    organization_id: Any = Field(...)\n    name: str = Field(...)\n    school_code: Optional[str] = Field(None)\n    nces_school_id: Optional[str] = Field(None)\n    building_code: Optional[str] = Field(None)\n    type: Optional[str] = Field(None)\n    timezone: Optional[str] = Field(None)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n