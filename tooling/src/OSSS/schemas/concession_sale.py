from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass ConcessionSaleBase(BaseModel):\n    stand_id: Any = Field(...)\n    event_id: Optional[Any] = Field(None)\n    total_cents: int = Field(...)\n    sold_at: datetime = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ConcessionSaleCreate(BaseModel):\n    stand_id: Any = Field(...)\n    event_id: Optional[Any] = Field(None)\n    total_cents: int = Field(...)\n    sold_at: datetime = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ConcessionSaleUpdate(BaseModel):\n    stand_id: Optional[Any] = Field(...)\n    event_id: Optional[Any] = Field(None)\n    total_cents: Optional[int] = Field(...)\n    sold_at: Optional[datetime] = Field(None)\n    id: Optional[Any] = Field(...)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ConcessionSaleRead(BaseModel):\n    stand_id: Any = Field(...)\n    event_id: Optional[Any] = Field(None)\n    total_cents: int = Field(...)\n    sold_at: datetime = Field(None)\n    id: Any = Field(...)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n