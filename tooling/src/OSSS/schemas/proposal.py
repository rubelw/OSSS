from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass ProposalBase(BaseModel):\n    organization_id: Optional[Any] = Field(None)\n    association_id: Optional[Any] = Field(None)\n    committee_id: Any = Field(...)\n    submitted_by_id: Optional[Any] = Field(None)\n    school_id: Optional[Any] = Field(None)\n    subject_id: Optional[Any] = Field(None)\n    course_id: Optional[Any] = Field(None)\n    title: str = Field(...)\n    summary: Optional[str] = Field(None)\n    rationale: Optional[str] = Field(None)\n    status: str = Field(...)\n    submitted_at: Optional[datetime] = Field(None)\n    attributes: Optional[Any] = Field(None)\n    curriculum_id: Optional[Any] = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ProposalCreate(BaseModel):\n    organization_id: Optional[Any] = Field(None)\n    association_id: Optional[Any] = Field(None)\n    committee_id: Any = Field(...)\n    submitted_by_id: Optional[Any] = Field(None)\n    school_id: Optional[Any] = Field(None)\n    subject_id: Optional[Any] = Field(None)\n    course_id: Optional[Any] = Field(None)\n    title: str = Field(...)\n    summary: Optional[str] = Field(None)\n    rationale: Optional[str] = Field(None)\n    status: str = Field(...)\n    submitted_at: Optional[datetime] = Field(None)\n    attributes: Optional[Any] = Field(None)\n    curriculum_id: Optional[Any] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ProposalUpdate(BaseModel):\n    organization_id: Optional[Any] = Field(None)\n    association_id: Optional[Any] = Field(None)\n    committee_id: Optional[Any] = Field(...)\n    submitted_by_id: Optional[Any] = Field(None)\n    school_id: Optional[Any] = Field(None)\n    subject_id: Optional[Any] = Field(None)\n    course_id: Optional[Any] = Field(None)\n    title: Optional[str] = Field(...)\n    summary: Optional[str] = Field(None)\n    rationale: Optional[str] = Field(None)\n    status: Optional[str] = Field(...)\n    submitted_at: Optional[datetime] = Field(None)\n    attributes: Optional[Any] = Field(None)\n    created_at: Optional[Any] = Field(None)\n    curriculum_id: Optional[Any] = Field(None)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass ProposalRead(BaseModel):\n    organization_id: Optional[Any] = Field(None)\n    association_id: Optional[Any] = Field(None)\n    committee_id: Any = Field(...)\n    submitted_by_id: Optional[Any] = Field(None)\n    school_id: Optional[Any] = Field(None)\n    subject_id: Optional[Any] = Field(None)\n    course_id: Optional[Any] = Field(None)\n    title: str = Field(...)\n    summary: Optional[str] = Field(None)\n    rationale: Optional[str] = Field(None)\n    status: str = Field(...)\n    submitted_at: Optional[datetime] = Field(None)\n    attributes: Optional[Any] = Field(None)\n    created_at: Optional[Any] = Field(None)\n    curriculum_id: Optional[Any] = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n