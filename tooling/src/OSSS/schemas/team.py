from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass TeamBase(BaseModel):\n    school_id: Any = Field(...)\n    sport_id: Any = Field(...)\n    name: Optional[str] = Field(None)\n    level: Optional[str] = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass TeamCreate(BaseModel):\n    school_id: Any = Field(...)\n    sport_id: Any = Field(...)\n    name: Optional[str] = Field(None)\n    level: Optional[str] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass TeamUpdate(BaseModel):\n    school_id: Optional[Any] = Field(...)\n    sport_id: Optional[Any] = Field(...)\n    name: Optional[str] = Field(None)\n    level: Optional[str] = Field(None)\n    id: Optional[Any] = Field(...)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass TeamRead(BaseModel):\n    school_id: Any = Field(...)\n    sport_id: Any = Field(...)\n    name: Optional[str] = Field(None)\n    level: Optional[str] = Field(None)\n    id: Any = Field(...)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n