from __future__ import annotations\nfrom typing import Optional, Any, List, Dict, Union\nfrom datetime import datetime, date\nfrom pydantic import BaseModel, Field, ConfigDict\n\nclass GameBase(BaseModel):\n    season_id: Optional[Any] = Field(None)\n    home_team_id: Optional[Any] = Field(None)\n    away_team_id: Optional[Any] = Field(None)\n    level: str = Field(None)\n    status: str = Field(None)\n    starts_at: Optional[datetime] = Field(None)\n    location: Optional[str] = Field(None)\n    home_score: Optional[int] = Field(None)\n    away_score: Optional[int] = Field(None)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass GameCreate(BaseModel):\n    season_id: Optional[Any] = Field(None)\n    home_team_id: Optional[Any] = Field(None)\n    away_team_id: Optional[Any] = Field(None)\n    level: str = Field(None)\n    status: str = Field(None)\n    starts_at: Optional[datetime] = Field(None)\n    location: Optional[str] = Field(None)\n    home_score: Optional[int] = Field(None)\n    away_score: Optional[int] = Field(None)\n    model_config = ConfigDict(from_attributes=True)\n\nclass GameUpdate(BaseModel):\n    season_id: Optional[Any] = Field(None)\n    home_team_id: Optional[Any] = Field(None)\n    away_team_id: Optional[Any] = Field(None)\n    level: Optional[str] = Field(None)\n    status: Optional[str] = Field(None)\n    starts_at: Optional[datetime] = Field(None)\n    location: Optional[str] = Field(None)\n    home_score: Optional[int] = Field(None)\n    away_score: Optional[int] = Field(None)\n    created_at: Optional[datetime] = Field(...)\n    updated_at: Optional[datetime] = Field(...)\n    id: Optional[Any] = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n\nclass GameRead(BaseModel):\n    season_id: Optional[Any] = Field(None)\n    home_team_id: Optional[Any] = Field(None)\n    away_team_id: Optional[Any] = Field(None)\n    level: str = Field(None)\n    status: str = Field(None)\n    starts_at: Optional[datetime] = Field(None)\n    location: Optional[str] = Field(None)\n    home_score: Optional[int] = Field(None)\n    away_score: Optional[int] = Field(None)\n    created_at: datetime = Field(...)\n    updated_at: datetime = Field(...)\n    id: Any = Field(...)\n    model_config = ConfigDict(from_attributes=True)\n