# pytest.ini — project-wide pytest configuration
# ---------------------------------------------------------------------------------
# This file customizes how pytest runs across the whole repo.
# Everything here applies to “pytest” invocations unless overridden on the CLI.
# ---------------------------------------------------------------------------------
[pytest]

# ------------------------------------------------------------------------------
# Environment variables for the test session
# NOTE: This requires the plugin "pytest-env" (pip install pytest-env).
# These vars are visible to tests and to code (e.g., conftest.py) via os.environ.
# We export both FK_BOOT_WAIT and FB_BOOT_WAIT so either spelling works.
# The value is the max seconds conftest waits for Keycloak OIDC discovery.
# Tune up if your machine/network starts containers slowly.
# ------------------------------------------------------------------------------
env =
    FK_COMPOSE_FILE=docker-compose.yml
    FK_BOOT_WAIT=150
    FB_BOOT_WAIT=150

# ------------------------------------------------------------------------------
# Make the "src" folder importable without modifying sys.path in tests.
# With this, `from src.OSSS import FastAPIKeycloak` resolves cleanly.
# ------------------------------------------------------------------------------
pythonpath = src

# ------------------------------------------------------------------------------
# Default extra options passed to pytest (can still be overridden on CLI)
#
# -x
#   Stop on first failure. Speeds feedback in TDD or CI “fail fast” mode.
#
# -p no:warnings
#   Disable pytest’s warnings plugin output (still allows Python warnings during
#   test execution, but suppresses the summary/noise from the plugin).
#
# --cov=OSSS
#   Collect coverage only for this package (requires pytest-cov).
#
# --cov-report=term
#   Show a standard coverage summary in the terminal.
#
# --cov-report=term-missing
#   Also list missing lines in the terminal (more verbose, helpful when fixing
#   coverage). Keeping both “term” and “term-missing” is intentional for
#   richer output.
#
# --cov-report=xml:./coverage.xml
#   Produce an XML report for CI systems/codecov/IDE integration.
#
# --no-cov-on-fail
#   If tests fail, skip coverage reporting (useful in pre-commit/CI to reduce
#   noise and avoid stale coverage data when a run errors out).
# ------------------------------------------------------------------------------
addopts = -x -p no:warnings --cov-report=term-missing --cov-report=term --cov-report=xml:./coverage.xml --no-cov-on-fail --cov=OSSS
